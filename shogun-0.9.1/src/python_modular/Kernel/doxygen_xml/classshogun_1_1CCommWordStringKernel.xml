<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CCommWordStringKernel" kind="class" prot="public">
    <compoundname>shogun::CCommWordStringKernel</compoundname>
    <basecompoundref refid="classshogun_1_1CStringKernel" prot="public" virt="non-virtual">shogun::CStringKernel&lt; uint16_t &gt;</basecompoundref>
    <derivedcompoundref refid="classshogun_1_1CWeightedCommWordStringKernel" prot="public" virt="non-virtual">shogun::CWeightedCommWordStringKernel</derivedcompoundref>
    <includes local="no">CommWordStringKernel.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1a1a4040a662dad08c6697f21e62693837" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CVarianceKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CVarianceKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1a1a4040a662dad08c6697f21e62693837">CVarianceKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="48" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1aa5aeba20e2ab84cda65c02197024923f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CSqrtDiagKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CSqrtDiagKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1aa5aeba20e2ab84cda65c02197024923f">CSqrtDiagKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="49" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1aaa5c880392db119ef5bf4518b1117fda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CAvgDiagKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CAvgDiagKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1aaa5c880392db119ef5bf4518b1117fda">CAvgDiagKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="50" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1a047ac6f2f2c0bac760e51048d40a4ac9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CRidgeKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CRidgeKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1a047ac6f2f2c0bac760e51048d40a4ac9">CRidgeKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="51" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1a6c778aee34bdcd2779880c95fe49a946" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CFirstElementKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CFirstElementKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1a6c778aee34bdcd2779880c95fe49a946">CFirstElementKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="52" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1a016adb4d6eda97d16d59c7bed552d60a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CTanimotoKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CTanimotoKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1a016adb4d6eda97d16d59c7bed552d60a">CTanimotoKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="53" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classshogun_1_1CCommWordStringKernel_1adffb9d7044cf61b8ba443614925ecf59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CDiceKernelNormalizer</definition>
        <argsstring></argsstring>
        <name>CDiceKernelNormalizer</name>
        <reimplements refid="classshogun_1_1CKernel_1adffb9d7044cf61b8ba443614925ecf59">CDiceKernelNormalizer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="54" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CCommWordStringKernel_1a06b11d287ad520d3197155360f3a5ef5" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CCommWordStringKernel::dictionary_size</definition>
        <argsstring></argsstring>
        <name>dictionary_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size of dictionary (number of possible strings) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="236" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommWordStringKernel_1a6fb55dfe151b78bcebb0674321d1d587" prot="protected" static="no" mutable="no">
        <type>float64_t *</type>
        <definition>float64_t* shogun::CCommWordStringKernel::dictionary_weights</definition>
        <argsstring></argsstring>
        <name>dictionary_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dictionary weights - array to hold counters for all possible strings </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="239" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommWordStringKernel_1a21b1632fcefa8928136f7c678b9eb09f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shogun::CCommWordStringKernel::use_sign</definition>
        <argsstring></argsstring>
        <name>use_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if sign shall be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="242" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommWordStringKernel_1a070e53d0e2665f0b078b1cf4c67050c2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shogun::CCommWordStringKernel::use_dict_diagonal_optimization</definition>
        <argsstring></argsstring>
        <name>use_dict_diagonal_optimization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>whether diagonal optimization shall be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="245" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommWordStringKernel_1a654518529d4523191a8ac1795fb98b09" prot="protected" static="no" mutable="no">
        <type>int32_t *</type>
        <definition>int32_t* shogun::CCommWordStringKernel::dict_diagonal_optimization</definition>
        <argsstring></argsstring>
        <name>dict_diagonal_optimization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array to hold counters for all strings </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="247" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aa4e7286461b7351aa64822f3d5a39d86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CCommWordStringKernel::CCommWordStringKernel</definition>
        <argsstring>(int32_t size, bool use_sign)</argsstring>
        <name>CCommWordStringKernel</name>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>if sign shall be used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a8c8cf64dc7c77e9dd58ac9c8ba5872e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CCommWordStringKernel::CCommWordStringKernel</definition>
        <argsstring>(CStringFeatures&lt; uint16_t &gt; *l, CStringFeatures&lt; uint16_t &gt; *r, bool use_sign=false, int32_t size=10)</argsstring>
        <name>CCommWordStringKernel</name>
        <param>
          <type>CStringFeatures&lt; uint16_t &gt; *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CStringFeatures&lt; uint16_t &gt; *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_sign</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>if sign shall be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a537ab06f1c61292976a9a96ff517fc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CCommWordStringKernel::~CCommWordStringKernel</definition>
        <argsstring>()</argsstring>
        <name>~CCommWordStringKernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1af7dce8d2fa5e54e1117f819ee1dbccd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommWordStringKernel::init</definition>
        <argsstring>(CFeatures *l, CFeatures *r)</argsstring>
        <name>init</name>
        <reimplements refid="classshogun_1_1CStringKernel_1a42b3447b58bb35080b980a7fde823376">init</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a06bd8d09127ae58433bb928837258859">init</reimplementedby>
        <param>
          <type>CFeatures *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CFeatures *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize kernel</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if initializing was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aa6d65b68d7fd2f1df295c80c88ff87ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommWordStringKernel::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="classshogun_1_1CKernel_1ae593c118eda68888ad76a88af0367c6e">cleanup</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1ae19580aae52cf4bc5a8cc130570304f0">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean up kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a94161bedee641601a04b8eb7fe10d55d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EKernelType</type>
        <definition>virtual EKernelType shogun::CCommWordStringKernel::get_kernel_type</definition>
        <argsstring>()</argsstring>
        <name>get_kernel_type</name>
        <reimplements refid="classshogun_1_1CKernel_1a13022c6fd98d925b6088b8c81fa65db9">get_kernel_type</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a01424361e5a6aa6a5d93b6683c5be650">get_kernel_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return what type of kernel we are</para><para><simplesect kind="return"><para>kernel type COMMWORDSTRING </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="92" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a89272f9f41df3c33d70d4ed95787ca08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* shogun::CCommWordStringKernel::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a099b4d1fbf7f45e351596ab854286ead">get_name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the kernel&apos;s name</para><para><simplesect kind="return"><para>name CommWordString </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="98" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a4fe3c2bb36da3ac8da254542ad3e67aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommWordStringKernel::init_dictionary</definition>
        <argsstring>(int32_t size)</argsstring>
        <name>init_dictionary</name>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize dictionary</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a89ac0ef7edcf2986fab288fca9acec96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommWordStringKernel::init_optimization</definition>
        <argsstring>(int32_t count, int32_t *IDX, float64_t *weights)</argsstring>
        <name>init_optimization</name>
        <reimplements refid="classshogun_1_1CKernel_1a913db590a96e58fadba2b1e9e34a10d6">init_optimization</reimplements>
        <param>
          <type>int32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>IDX</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize optimization</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IDX</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>weights </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if initializing was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1ab6bad96fb98b9e22926807b45b561342" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommWordStringKernel::delete_optimization</definition>
        <argsstring>()</argsstring>
        <name>delete_optimization</name>
        <reimplements refid="classshogun_1_1CKernel_1a1e5b580f5214d5fac1f07c81c2fcb0ad">delete_optimization</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete optimization</para><para><simplesect kind="return"><para>if deleting was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aa8113914bd6309ded59a9e0a8a375d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CCommWordStringKernel::compute_optimized</definition>
        <argsstring>(int32_t idx)</argsstring>
        <name>compute_optimized</name>
        <reimplements refid="classshogun_1_1CKernel_1a614b39452046d4336f09c881360b4af7">compute_optimized</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a1d9f9822580941db454e4c6e44875dc1">compute_optimized</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute optimized</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index to compute </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>optimized value at given index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a714f915c7ade3e9dc169650f93d59490" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommWordStringKernel::add_to_normal</definition>
        <argsstring>(int32_t idx, float64_t weight)</argsstring>
        <name>add_to_normal</name>
        <reimplements refid="classshogun_1_1CKernel_1aabe2fe8e2cc8e2846a6aa60c364855ba">add_to_normal</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a90a8a575913bd7ce944263f459d4753e">add_to_normal</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add to normal</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>where to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>what to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aed2e3d18f4c9d209949500ad13e36757" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommWordStringKernel::clear_normal</definition>
        <argsstring>()</argsstring>
        <name>clear_normal</name>
        <reimplements refid="classshogun_1_1CKernel_1a46a94bb5789a5edbf1d776610ae3fa04">clear_normal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clear normal </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aa5486008faa93394d74fe805e70e6d33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EFeatureType</type>
        <definition>virtual EFeatureType shogun::CCommWordStringKernel::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CStringKernel_1af95571fddbc562ccf38623511a8a629c">get_feature_type</reimplements>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1a01137763a1eb83f910a18f2356b26535">get_feature_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return feature type the kernel can deal with</para><para><simplesect kind="return"><para>feature type WORD </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="143" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a65c640558732822b39956d873b51c7df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CCommWordStringKernel::get_dictionary</definition>
        <argsstring>(int32_t &amp;dsize, float64_t *&amp;dweights)</argsstring>
        <name>get_dictionary</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>dsize</declname>
        </param>
        <param>
          <type>float64_t *&amp;</type>
          <declname>dweights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dictionary</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsize</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary size will be stored in here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dweights</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary weights will be stored in here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="151" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aff0c6f594ce67b9c753266db7a181202" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t *</type>
        <definition>virtual float64_t* shogun::CCommWordStringKernel::compute_scoring</definition>
        <argsstring>(int32_t max_degree, int32_t &amp;num_feat, int32_t &amp;num_sym, float64_t *target, int32_t num_suppvec, int32_t *IDX, float64_t *alphas, bool do_init=true)</argsstring>
        <name>compute_scoring</name>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1ae0714fe00d777c5da15997cb963bf39f">compute_scoring</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>max_degree</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>num_feat</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>num_sym</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>num_suppvec</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>IDX</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>alphas</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_init</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute scoring</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_degree</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum degree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_feat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of features </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_sym</parametername>
</parameternamelist>
<parameterdescription>
<para>number of symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>target </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_suppvec</parametername>
</parameternamelist>
<parameterdescription>
<para>number of support vectors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IDX</parametername>
</parameternamelist>
<parameterdescription>
<para>IDX </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphas</parametername>
</parameternamelist>
<parameterdescription>
<para>alphas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>do_init</parametername>
</parameternamelist>
<parameterdescription>
<para>if initialization shall be performed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed scores </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a0aefd4722fac035889d94ff2484c1ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* shogun::CCommWordStringKernel::compute_consensus</definition>
        <argsstring>(int32_t &amp;num_feat, int32_t num_suppvec, int32_t *IDX, float64_t *alphas)</argsstring>
        <name>compute_consensus</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>num_feat</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>num_suppvec</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>IDX</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>alphas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute consensus</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_feat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of features </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_suppvec</parametername>
</parameternamelist>
<parameterdescription>
<para>number of support vectors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IDX</parametername>
</parameternamelist>
<parameterdescription>
<para>IDX </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphas</parametername>
</parameternamelist>
<parameterdescription>
<para>alphas </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed consensus </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1aeb992d2b50ebda402ca007ed2375cc87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CCommWordStringKernel::set_use_dict_diagonal_optimization</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_use_dict_diagonal_optimization</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set_use_dict_diagonal_optimization</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>enable diagonal optimization </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="190" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1af98327e5e1f38e3fac1aff1e971586e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shogun::CCommWordStringKernel::get_use_dict_diagonal_optimization</definition>
        <argsstring>()</argsstring>
        <name>get_use_dict_diagonal_optimization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get.use.dict.diagonal.optimization</para><para><simplesect kind="return"><para>true if diagonal optimization is on </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="199" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="198" bodyend="201"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1af8a28fb17db8858fc6912bc6dfc68581" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CCommWordStringKernel::compute</definition>
        <argsstring>(int32_t idx_a, int32_t idx_b)</argsstring>
        <name>compute</name>
        <reimplements refid="classshogun_1_1CKernel_1ab1765c43943a668fea15971d08ff1229">compute</reimplements>
        <param>
          <type>int32_t</type>
          <declname>idx_a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>idx_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute kernel function for features a and b idx_{a,b} denote the index of the feature vectors in the corresponding feature object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_a</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx_b</parametername>
</parameternamelist>
<parameterdescription>
<para>index b </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed kernel function at indices a,b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="213" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1a446a1454bb27107a31e092d4c1551acc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CCommWordStringKernel::compute_helper</definition>
        <argsstring>(int32_t idx_a, int32_t idx_b, bool do_sort)</argsstring>
        <name>compute_helper</name>
        <reimplementedby refid="classshogun_1_1CWeightedCommWordStringKernel_1aa351996f195a795b1eb454fdcf0791da">compute_helper</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>idx_a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>idx_b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper for compute</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_a</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx_b</parametername>
</parameternamelist>
<parameterdescription>
<para>index b </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>do_sort</parametername>
</parameternamelist>
<parameterdescription>
<para>if sorting shall be performed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommWordStringKernel_1ad3f3261ec8f811f3309ac3b96f3c8bb5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CCommWordStringKernel::compute_diag</definition>
        <argsstring>(int32_t idx_a)</argsstring>
        <name>compute_diag</name>
        <param>
          <type>int32_t</type>
          <declname>idx_a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper to compute only diagonal normalization for training</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_a</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unnormalized diagonal value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The CommWordString kernel may be used to compute the spectrum kernel from strings that have been mapped into unsigned 16bit integers. </para>    </briefdescription>
    <detaileddescription>
<para>These 16bit integers correspond to k-mers. To applicable in this kernel they need to be sorted (e.g. via the SortWordString pre-processor).</para><para>It basically uses the algorithm in the unix &quot;comm&quot; command (hence the name) to compute:</para><para><formula id="6">\[ k({\bf x},({\bf x&apos;})= \Phi_k({\bf x})\cdot \Phi_k({\bf x&apos;}) \]</formula></para><para>where <formula id="7">$\Phi_k$</formula> maps a sequence <formula id="8">${\bf x}$</formula> that consists of letters in <formula id="9">$\Sigma$</formula> to a feature vector of size <formula id="10">$|\Sigma|^k$</formula>. In this feature vector each entry denotes how often the k-mer appears in that <formula id="8">${\bf x}$</formula>.</para><para>Note that this representation is especially tuned to small alphabets (like the 2-bit alphabet DNA), for which it enables spectrum kernels of order up to 8.</para><para>For this kernel the linadd speedups are quite efficiently implemented using direct maps. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="30">
        <label>shogun::CCommWordStringKernel</label>
        <link refid="classshogun_1_1CCommWordStringKernel"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
      </node>
      <node id="33">
        <label>shogun::CWeightedCommWordStringKernel</label>
        <link refid="classshogun_1_1CWeightedCommWordStringKernel"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>shogun::CStringKernel&lt; uint16_t &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="34">
        <label>shogun::CCommWordStringKernel</label>
        <link refid="classshogun_1_1CCommWordStringKernel"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
        <childnode refid="37" relation="usage">
          <edgelabel>normalizer</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>shogun::CKernelNormalizer</label>
        <link refid="classshogun_1_1CKernelNormalizer"/>
      </node>
      <node id="35">
        <label>shogun::CStringKernel&lt; uint16_t &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" line="47" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommWordStringKernel.h" bodystart="46" bodyend="248"/>
    <listofallmembers>
      <member refid="classshogun_1_1CCommWordStringKernel_1a714f915c7ade3e9dc169650f93d59490" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>add_to_normal</name></member>
      <member refid="classshogun_1_1CKernel_1ae1dc0bbc6ea973b18dcba2e4fac486b8" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>cache_size</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aaa5c880392db119ef5bf4518b1117fda" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CAvgDiagKernelNormalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aa4e7286461b7351aa64822f3d5a39d86" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CCommWordStringKernel</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a8c8cf64dc7c77e9dd58ac9c8ba5872e3" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CCommWordStringKernel</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1adffb9d7044cf61b8ba443614925ecf59" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CDiceKernelNormalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a6c778aee34bdcd2779880c95fe49a946" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CFirstElementKernelNormalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a77872c37fccc650cd7f918b253bbeb68" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1aa2b1f73c8585adee444bb99a98e63a5a" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a70cfe05692f9ee159aeb0dfcb8d2f5c3" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aa6d65b68d7fd2f1df295c80c88ff87ee" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aed2e3d18f4c9d209949500ad13e36757" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>clear_normal</name></member>
      <member refid="classshogun_1_1CKernel_1a105026c07a74e493c1711dad83b335f1" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1af8a28fb17db8858fc6912bc6dfc68581" prot="protected" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute</name></member>
      <member refid="classshogun_1_1CKernel_1a5fc6a483d63fd0a3460a457cee60f993" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_batch</name></member>
      <member refid="classshogun_1_1CKernel_1a9a0bbc983ee6c2050ee4d5c814496924" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_by_subkernel</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a0aefd4722fac035889d94ff2484c1ca3" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_consensus</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1ad3f3261ec8f811f3309ac3b96f3c8bb5" prot="protected" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_diag</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a446a1454bb27107a31e092d4c1551acc" prot="protected" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_helper</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aa8113914bd6309ded59a9e0a8a375d10" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_optimized</name></member>
      <member refid="classshogun_1_1CKernel_1a813bcdc6778b8c0b4c662a5209a68776" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_row_start</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aff0c6f594ce67b9c753266db7a181202" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>compute_scoring</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a047ac6f2f2c0bac760e51048d40a4ac9" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CRidgeKernelNormalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aa5aeba20e2ab84cda65c02197024923f" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CSqrtDiagKernelNormalizer</name></member>
      <member refid="classshogun_1_1CStringKernel_1af170456997db0dda48d7abe68c9f94ce" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CStringKernel_1aa97ba03f6e02171efd195386b6df838e" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a016adb4d6eda97d16d59c7bed552d60a" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CTanimotoKernelNormalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a1a4040a662dad08c6697f21e62693837" prot="private" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>CVarianceKernelNormalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1ab6bad96fb98b9e22926807b45b561342" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>delete_optimization</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a654518529d4523191a8ac1795fb98b09" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>dict_diagonal_optimization</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a06b11d287ad520d3197155360f3a5ef5" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>dictionary_size</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a6fb55dfe151b78bcebb0674321d1d587" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>dictionary_weights</name></member>
      <member refid="classshogun_1_1CKernel_1ac53fab2767fa28a2141294219ddc5ea5" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a70a87d5839c56ce67efad04119b16758" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a65c640558732822b39956d873b51c7df" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_dictionary</name></member>
      <member refid="classshogun_1_1CStringKernel_1a36d05c13b46e70f5d9bc8d02945b1750" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aa5486008faa93394d74fe805e70e6d33" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CKernel_1a4e06bfb908463f9bc28b0c3ae7bdeef3" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a1f4f83d3d7bc7e34336c4c262ca95570" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a19c9666c242a0b019f645593e2c63e9f" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a52f510cf6ece0052527f31ad2274e855" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_kernel_matrix_helper</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a94161bedee641601a04b8eb7fe10d55d" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_kernel_type</name></member>
      <member refid="classshogun_1_1CKernel_1a0c71c8eb3ac024069c6bd9ff61ec0c39" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_lhs</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a89272f9f41df3c33d70d4ed95787ca08" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CKernel_1a7aacb7938ed0f98f1fd14253bc1e9b31" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0c2a6eb4ed24590be0cc72a5871f848d" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_num_subkernels</name></member>
      <member refid="classshogun_1_1CKernel_1af350caa123740b96ecaa69fd28454a65" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_num_vec_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a7e45a8f4fc00c39b7d54dd37e001bed9" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_num_vec_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aff5f02561b6963a3c2a2e63b4ac8e43c" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abfd608e83f9839f8ca626ad793e452b0" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aed423e68a226ad9f717d05f54cf9c854" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_subkernel_weights</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1af98327e5e1f38e3fac1aff1e971586e4" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>get_use_dict_diagonal_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a6db0206d0b4fe30bf64b93d8eed3b8b7" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>has_features</name></member>
      <member refid="classshogun_1_1CKernel_1afd958e85909aec22c830e9137fcd7d4c" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>has_property</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1af7dce8d2fa5e54e1117f819ee1dbccd8" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>init</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a4fe3c2bb36da3ac8da254542ad3e67aa" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>init_dictionary</name></member>
      <member refid="classshogun_1_1CKernel_1aeb0378209b4c63b7ae60596540ebed80" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>init_normalizer</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a89ac0ef7edcf2986fab288fca9acec96" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>init_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a8363fd727262daf47cad9fb4842daa6c" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>init_optimization_svm</name></member>
      <member refid="classshogun_1_1CKernel_1ab4cbfe2c04238e33322647e22960c246" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a01f88ea73f221b5a768e1c67c731a763" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1ae7bc6b54431a07498f0b6ef4ab087297" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a28ef59e6dd9055579b2f95fb3a19b2cc" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>lhs_equals_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a29e2f0ad2694cc53a800f3ad8be56077" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>list_kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a93221d864190e13c4749793d4ae7f0b0" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>load</name></member>
      <member refid="classshogun_1_1CKernel_1acbe5200168cf7ade8c30f1a1eb40469b" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0d5cfafbf2afd0260857089504262dd6" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>num_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a6e741d3d75546bdc15bfb5be41aa9b96" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>num_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad96fd157602292f3d88ebfef3077be00" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>opt_type</name></member>
      <member refid="classshogun_1_1CKernel_1a5b4d22f0cd136296f6e9aee3364607d6" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>optimization_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a16638a9afae47d4c2e36e20b2dff92f5" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>properties</name></member>
      <member refid="classshogun_1_1CKernel_1a83df3f7334ac9876caaec761ac55314e" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>remove_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad56df090f52a020e34162abd0b0cd0e5" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>remove_lhs_and_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ade2b456ef65c988c59847e6a1d682956" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>remove_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a5dab35da7f429dd860f59d9a98960a3f" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ab1241d4ce37e5352cee96f6b456439c4" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>save</name></member>
      <member refid="classshogun_1_1CKernel_1aa552d8e2591297a3fd5aae46bebaf645" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a23ec2b5c3d824b3f148c905bfbafdebf" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CKernel_1ad2d2934daf162bfb010536c1eefd162c" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a0a3fc1096d6e00f56ca0f11cadd12ab7" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a11ab2c3a02fc458f510f36c2fe503a2c" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abd52ab8944c2fd9efd45e46dee4f27ee" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_property</name></member>
      <member refid="classshogun_1_1CKernel_1af1e586162ba4aadc7c0143c1c8819f1a" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_subkernel_weights</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1aeb992d2b50ebda402ca007ed2375cc87" prot="public" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>set_use_dict_diagonal_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a83025690228a1d47e4d43a8ed4304749" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>unset_property</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a070e53d0e2665f0b078b1cf4c67050c2" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>use_dict_diagonal_optimization</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a21b1632fcefa8928136f7c678b9eb09f" prot="protected" virt="non-virtual"><scope>shogun::CCommWordStringKernel</scope><name>use_sign</name></member>
      <member refid="classshogun_1_1CCommWordStringKernel_1a537ab06f1c61292976a9a96ff517fc55" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>~CCommWordStringKernel</name></member>
      <member refid="classshogun_1_1CKernel_1ac0b3e1e0d02e446954712d8245cd68c3" prot="public" virt="virtual"><scope>shogun::CCommWordStringKernel</scope><name>~CKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
