<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CCommUlongStringKernel" kind="class" prot="public">
    <compoundname>shogun::CCommUlongStringKernel</compoundname>
    <basecompoundref refid="classshogun_1_1CStringKernel" prot="public" virt="non-virtual">shogun::CStringKernel&lt; uint64_t &gt;</basecompoundref>
    <includes local="no">CommUlongStringKernel.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CCommUlongStringKernel_1ac0645ccb469790b8331a8e5f5d99d059" prot="protected" static="no" mutable="no">
        <type>CDynamicArray&lt; uint64_t &gt;</type>
        <definition>CDynamicArray&lt;uint64_t&gt; shogun::CCommUlongStringKernel::dictionary</definition>
        <argsstring></argsstring>
        <name>dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dictionary </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="204" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommUlongStringKernel_1a4253a8121e40fe1b1c000f42295327f1" prot="protected" static="no" mutable="no">
        <type>CDynamicArray&lt; float64_t &gt;</type>
        <definition>CDynamicArray&lt;float64_t&gt; shogun::CCommUlongStringKernel::dictionary_weights</definition>
        <argsstring></argsstring>
        <name>dictionary_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dictionary weights </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="206" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CCommUlongStringKernel_1aa9567a5b4dd12ca10e371973e93b1925" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shogun::CCommUlongStringKernel::use_sign</definition>
        <argsstring></argsstring>
        <name>use_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if sign shall be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="209" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1aa532b4dab20d1c446163ed10623a21cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CCommUlongStringKernel::CCommUlongStringKernel</definition>
        <argsstring>(int32_t size=10, bool use_sign=false)</argsstring>
        <name>CCommUlongStringKernel</name>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>use_sign</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>if sign shall be used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1abfb74ddddfb800dd2c8bb17cbfdc4fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CCommUlongStringKernel::CCommUlongStringKernel</definition>
        <argsstring>(CStringFeatures&lt; uint64_t &gt; *l, CStringFeatures&lt; uint64_t &gt; *r, bool use_sign=false, int32_t size=10)</argsstring>
        <name>CCommUlongStringKernel</name>
        <param>
          <type>CStringFeatures&lt; uint64_t &gt; *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CStringFeatures&lt; uint64_t &gt; *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_sign</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>if sign shall be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1ac2b7501e5e32a4f323ddd29e3584b97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CCommUlongStringKernel::~CCommUlongStringKernel</definition>
        <argsstring>()</argsstring>
        <name>~CCommUlongStringKernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a522a199a0920ff53da66013a8e7be17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommUlongStringKernel::init</definition>
        <argsstring>(CFeatures *l, CFeatures *r)</argsstring>
        <name>init</name>
        <reimplements refid="classshogun_1_1CStringKernel_1a42b3447b58bb35080b980a7fde823376">init</reimplements>
        <param>
          <type>CFeatures *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CFeatures *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize kernel</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if initializing was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a56458fa891e814772e4c7f5b982c9b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommUlongStringKernel::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="classshogun_1_1CKernel_1ae593c118eda68888ad76a88af0367c6e">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean up kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1aa046cf201bf1367ac0228f182871eb8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EKernelType</type>
        <definition>virtual EKernelType shogun::CCommUlongStringKernel::get_kernel_type</definition>
        <argsstring>()</argsstring>
        <name>get_kernel_type</name>
        <reimplements refid="classshogun_1_1CKernel_1a13022c6fd98d925b6088b8c81fa65db9">get_kernel_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return what type of kernel we are</para><para><simplesect kind="return"><para>kernel type COMMULONGSTRING </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="87" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a95594b1e5184438776e4d1e94b06210e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* shogun::CCommUlongStringKernel::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the kernel&apos;s name</para><para><simplesect kind="return"><para>name CommUlongString </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="93" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1aed506ac8780b5963a610dddf1a89f70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommUlongStringKernel::init_optimization</definition>
        <argsstring>(int32_t count, int32_t *IDX, float64_t *weights)</argsstring>
        <name>init_optimization</name>
        <reimplements refid="classshogun_1_1CKernel_1a913db590a96e58fadba2b1e9e34a10d6">init_optimization</reimplements>
        <param>
          <type>int32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>IDX</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize optimization</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IDX</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>weights </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if initializing was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1abd8e6c8433ac22482b306a00de2de715" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CCommUlongStringKernel::delete_optimization</definition>
        <argsstring>()</argsstring>
        <name>delete_optimization</name>
        <reimplements refid="classshogun_1_1CKernel_1a1e5b580f5214d5fac1f07c81c2fcb0ad">delete_optimization</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete optimization</para><para><simplesect kind="return"><para>if deleting was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1aeb6786ceef5d250001f88690f22738b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CCommUlongStringKernel::compute_optimized</definition>
        <argsstring>(int32_t idx)</argsstring>
        <name>compute_optimized</name>
        <reimplements refid="classshogun_1_1CKernel_1a614b39452046d4336f09c881360b4af7">compute_optimized</reimplements>
        <param>
          <type>int32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute optimized</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index to compute </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>optimized value at given index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1ad6350254150a439418f6d841ef2495f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CCommUlongStringKernel::merge_dictionaries</definition>
        <argsstring>(int32_t &amp;t, int32_t j, int32_t &amp;k, uint64_t *vec, uint64_t *dic, float64_t *dic_weights, float64_t weight, int32_t vec_idx)</argsstring>
        <name>merge_dictionaries</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>dic</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dic_weights</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>vec_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>merge dictionaries</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>t </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>j </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>k </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dic</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dic_weights</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>weight </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>vector index </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="132" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="129" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a9cf650c487a3ed78e4e0feb31190651b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommUlongStringKernel::add_to_normal</definition>
        <argsstring>(int32_t idx, float64_t weight)</argsstring>
        <name>add_to_normal</name>
        <reimplements refid="classshogun_1_1CKernel_1aabe2fe8e2cc8e2846a6aa60c364855ba">add_to_normal</reimplements>
        <param>
          <type>int32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add to normal</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>where to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>what to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="160"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a65971f5de3a9235cc93c55443bedcd29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommUlongStringKernel::clear_normal</definition>
        <argsstring>()</argsstring>
        <name>clear_normal</name>
        <reimplements refid="classshogun_1_1CKernel_1a46a94bb5789a5edbf1d776610ae3fa04">clear_normal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clear normal </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a9db4c643c3693aac2f4b74fd3929d1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommUlongStringKernel::remove_lhs</definition>
        <argsstring>()</argsstring>
        <name>remove_lhs</name>
        <reimplements refid="classshogun_1_1CKernel_1a83df3f7334ac9876caaec761ac55314e">remove_lhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove lhs from kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1ab8942bd284e5788f92457453c199ca5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CCommUlongStringKernel::remove_rhs</definition>
        <argsstring>()</argsstring>
        <name>remove_rhs</name>
        <reimplements refid="classshogun_1_1CKernel_1ade2b456ef65c988c59847e6a1d682956">remove_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove rhs from kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a6996ac816d3574e573ad1e672299063c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EFeatureType</type>
        <definition>virtual EFeatureType shogun::CCommUlongStringKernel::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CStringKernel_1af95571fddbc562ccf38623511a8a629c">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return feature type the kernel can deal with</para><para><simplesect kind="return"><para>feature type ULONG </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="175" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1aa00fe4525c8c6c45c0592cb5f497e808" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CCommUlongStringKernel::get_dictionary</definition>
        <argsstring>(int32_t &amp;dsize, uint64_t *&amp;dict, float64_t *&amp;dweights)</argsstring>
        <name>get_dictionary</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>dsize</declname>
        </param>
        <param>
          <type>uint64_t *&amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>float64_t *&amp;</type>
          <declname>dweights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dictionary</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsize</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary size will be stored in here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dict</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary will be stored in here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dweights</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary weights will be stored in here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="185" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="183" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classshogun_1_1CCommUlongStringKernel_1a29e889645846b9ca8024cd33425bf025" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>float64_t shogun::CCommUlongStringKernel::compute</definition>
        <argsstring>(int32_t idx_a, int32_t idx_b)</argsstring>
        <name>compute</name>
        <reimplements refid="classshogun_1_1CKernel_1ab1765c43943a668fea15971d08ff1229">compute</reimplements>
        <param>
          <type>int32_t</type>
          <declname>idx_a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>idx_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute kernel function for features a and b idx_{a,b} denote the index of the feature vectors in the corresponding feature object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_a</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx_b</parametername>
</parameternamelist>
<parameterdescription>
<para>index b </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed kernel function at indices a,b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The CommUlongString kernel may be used to compute the spectrum kernel from strings that have been mapped into unsigned 64bit integers. </para>    </briefdescription>
    <detaileddescription>
<para>These 64bit integers correspond to k-mers. To be applicable in this kernel they need to be sorted (e.g. via the SortUlongString pre-processor).</para><para>It basically uses the algorithm in the unix &quot;comm&quot; command (hence the name) to compute:</para><para><formula id="6">\[ k({\bf x},({\bf x&apos;})= \Phi_k({\bf x})\cdot \Phi_k({\bf x&apos;}) \]</formula></para><para>where <formula id="7">$\Phi_k$</formula> maps a sequence <formula id="8">${\bf x}$</formula> that consists of letters in <formula id="9">$\Sigma$</formula> to a feature vector of size <formula id="10">$|\Sigma|^k$</formula>. In this feature vector each entry denotes how often the k-mer appears in that <formula id="8">${\bf x}$</formula>.</para><para>Note that this representation enables spectrum kernels of order 8 for 8bit alphabets (like binaries) and order 32 for 2-bit alphabets like DNA.</para><para>For this kernel the linadd speedups are implemented (though there is room for improvement here when a whole set of sequences is ADDed) using sorted lists. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="25">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
      </node>
      <node id="23">
        <label>shogun::CCommUlongStringKernel</label>
        <link refid="classshogun_1_1CCommUlongStringKernel"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>shogun::CStringKernel&lt; uint64_t &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="28">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
        <childnode refid="29" relation="usage">
          <edgelabel>normalizer</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>shogun::CCommUlongStringKernel</label>
        <link refid="classshogun_1_1CCommUlongStringKernel"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>shogun::CKernelNormalizer</label>
        <link refid="classshogun_1_1CKernelNormalizer"/>
      </node>
      <node id="27">
        <label>shogun::CStringKernel&lt; uint64_t &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" line="49" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/CommUlongStringKernel.h" bodystart="48" bodyend="210"/>
    <listofallmembers>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a9cf650c487a3ed78e4e0feb31190651b" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>add_to_normal</name></member>
      <member refid="classshogun_1_1CKernel_1ae1dc0bbc6ea973b18dcba2e4fac486b8" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>cache_size</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aa532b4dab20d1c446163ed10623a21cd" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CCommUlongStringKernel</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1abfb74ddddfb800dd2c8bb17cbfdc4fa9" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CCommUlongStringKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a77872c37fccc650cd7f918b253bbeb68" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1aa2b1f73c8585adee444bb99a98e63a5a" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a70cfe05692f9ee159aeb0dfcb8d2f5c3" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a56458fa891e814772e4c7f5b982c9b96" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a65971f5de3a9235cc93c55443bedcd29" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>clear_normal</name></member>
      <member refid="classshogun_1_1CKernel_1a105026c07a74e493c1711dad83b335f1" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a29e889645846b9ca8024cd33425bf025" prot="protected" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>compute</name></member>
      <member refid="classshogun_1_1CKernel_1a5fc6a483d63fd0a3460a457cee60f993" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>compute_batch</name></member>
      <member refid="classshogun_1_1CKernel_1a9a0bbc983ee6c2050ee4d5c814496924" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>compute_by_subkernel</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aeb6786ceef5d250001f88690f22738b0" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>compute_optimized</name></member>
      <member refid="classshogun_1_1CKernel_1a813bcdc6778b8c0b4c662a5209a68776" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>compute_row_start</name></member>
      <member refid="classshogun_1_1CStringKernel_1af170456997db0dda48d7abe68c9f94ce" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CStringKernel_1aa97ba03f6e02171efd195386b6df838e" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1abd8e6c8433ac22482b306a00de2de715" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>delete_optimization</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1ac0645ccb469790b8331a8e5f5d99d059" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>dictionary</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a4253a8121e40fe1b1c000f42295327f1" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>dictionary_weights</name></member>
      <member refid="classshogun_1_1CKernel_1ac53fab2767fa28a2141294219ddc5ea5" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a70a87d5839c56ce67efad04119b16758" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aa00fe4525c8c6c45c0592cb5f497e808" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_dictionary</name></member>
      <member refid="classshogun_1_1CStringKernel_1a36d05c13b46e70f5d9bc8d02945b1750" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a6996ac816d3574e573ad1e672299063c" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CKernel_1a4e06bfb908463f9bc28b0c3ae7bdeef3" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a1f4f83d3d7bc7e34336c4c262ca95570" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a19c9666c242a0b019f645593e2c63e9f" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a52f510cf6ece0052527f31ad2274e855" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_kernel_matrix_helper</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aa046cf201bf1367ac0228f182871eb8c" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_kernel_type</name></member>
      <member refid="classshogun_1_1CKernel_1a0c71c8eb3ac024069c6bd9ff61ec0c39" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_lhs</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a95594b1e5184438776e4d1e94b06210e" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CKernel_1a7aacb7938ed0f98f1fd14253bc1e9b31" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0c2a6eb4ed24590be0cc72a5871f848d" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_num_subkernels</name></member>
      <member refid="classshogun_1_1CKernel_1af350caa123740b96ecaa69fd28454a65" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_num_vec_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a7e45a8f4fc00c39b7d54dd37e001bed9" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_num_vec_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aff5f02561b6963a3c2a2e63b4ac8e43c" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abfd608e83f9839f8ca626ad793e452b0" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aed423e68a226ad9f717d05f54cf9c854" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>get_subkernel_weights</name></member>
      <member refid="classshogun_1_1CKernel_1a6db0206d0b4fe30bf64b93d8eed3b8b7" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>has_features</name></member>
      <member refid="classshogun_1_1CKernel_1afd958e85909aec22c830e9137fcd7d4c" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>has_property</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a522a199a0920ff53da66013a8e7be17e" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>init</name></member>
      <member refid="classshogun_1_1CKernel_1aeb0378209b4c63b7ae60596540ebed80" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>init_normalizer</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aed506ac8780b5963a610dddf1a89f70c" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>init_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a8363fd727262daf47cad9fb4842daa6c" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>init_optimization_svm</name></member>
      <member refid="classshogun_1_1CKernel_1ab4cbfe2c04238e33322647e22960c246" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a01f88ea73f221b5a768e1c67c731a763" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1ae7bc6b54431a07498f0b6ef4ab087297" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a28ef59e6dd9055579b2f95fb3a19b2cc" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>lhs_equals_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a29e2f0ad2694cc53a800f3ad8be56077" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>list_kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a93221d864190e13c4749793d4ae7f0b0" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>load</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1ad6350254150a439418f6d841ef2495f4" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>merge_dictionaries</name></member>
      <member refid="classshogun_1_1CKernel_1acbe5200168cf7ade8c30f1a1eb40469b" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0d5cfafbf2afd0260857089504262dd6" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>num_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a6e741d3d75546bdc15bfb5be41aa9b96" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>num_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad96fd157602292f3d88ebfef3077be00" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>opt_type</name></member>
      <member refid="classshogun_1_1CKernel_1a5b4d22f0cd136296f6e9aee3364607d6" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>optimization_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a16638a9afae47d4c2e36e20b2dff92f5" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>properties</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1a9db4c643c3693aac2f4b74fd3929d1fa" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>remove_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad56df090f52a020e34162abd0b0cd0e5" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>remove_lhs_and_rhs</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1ab8942bd284e5788f92457453c199ca5c" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>remove_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a5dab35da7f429dd860f59d9a98960a3f" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ab1241d4ce37e5352cee96f6b456439c4" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>save</name></member>
      <member refid="classshogun_1_1CKernel_1aa552d8e2591297a3fd5aae46bebaf645" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a23ec2b5c3d824b3f148c905bfbafdebf" prot="public" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CKernel_1ad2d2934daf162bfb010536c1eefd162c" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a0a3fc1096d6e00f56ca0f11cadd12ab7" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a11ab2c3a02fc458f510f36c2fe503a2c" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abd52ab8944c2fd9efd45e46dee4f27ee" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_property</name></member>
      <member refid="classshogun_1_1CKernel_1af1e586162ba4aadc7c0143c1c8819f1a" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>set_subkernel_weights</name></member>
      <member refid="classshogun_1_1CKernel_1a83025690228a1d47e4d43a8ed4304749" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>unset_property</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1aa9567a5b4dd12ca10e371973e93b1925" prot="protected" virt="non-virtual"><scope>shogun::CCommUlongStringKernel</scope><name>use_sign</name></member>
      <member refid="classshogun_1_1CCommUlongStringKernel_1ac2b7501e5e32a4f323ddd29e3584b97d" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>~CCommUlongStringKernel</name></member>
      <member refid="classshogun_1_1CKernel_1ac0b3e1e0d02e446954712d8245cd68c3" prot="public" virt="virtual"><scope>shogun::CCommUlongStringKernel</scope><name>~CKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
