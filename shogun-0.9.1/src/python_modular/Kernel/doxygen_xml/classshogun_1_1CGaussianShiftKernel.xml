<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CGaussianShiftKernel" kind="class" prot="public">
    <compoundname>shogun::CGaussianShiftKernel</compoundname>
    <basecompoundref refid="classshogun_1_1CGaussianKernel" prot="public" virt="non-virtual">shogun::CGaussianKernel</basecompoundref>
    <includes local="no">GaussianShiftKernel.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CGaussianShiftKernel_1a7e6fdb5aae761b5292fb06c9465a43e5" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CGaussianShiftKernel::max_shift</definition>
        <argsstring></argsstring>
        <name>max_shift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>maximum shift </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="91" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CGaussianShiftKernel_1ab90ddeecd22c24996b7299d446da700e" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CGaussianShiftKernel::shift_step</definition>
        <argsstring></argsstring>
        <name>shift_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shift step </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="93" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1ad91f8da1ecc5c05c5f7aa2c515b4d073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CGaussianShiftKernel::CGaussianShiftKernel</definition>
        <argsstring>(int32_t size, float64_t width, int32_t max_shift, int32_t shift_step)</argsstring>
        <name>CGaussianShiftKernel</name>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>max_shift</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift_step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum shift </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift_step</parametername>
</parameternamelist>
<parameterdescription>
<para>shift step </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1a03c041bb135f3dcc1be6decb762ab420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CGaussianShiftKernel::CGaussianShiftKernel</definition>
        <argsstring>(CSimpleFeatures&lt; float64_t &gt; *l, CSimpleFeatures&lt; float64_t &gt; *r, float64_t width, int32_t max_shift, int32_t shift_step, int32_t size=10)</argsstring>
        <name>CGaussianShiftKernel</name>
        <param>
          <type>CSimpleFeatures&lt; float64_t &gt; *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CSimpleFeatures&lt; float64_t &gt; *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>max_shift</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift_step</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum shift </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift_step</parametername>
</parameternamelist>
<parameterdescription>
<para>shift step </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1a5d21a9b36e91a0951ace1b58ffbc3d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CGaussianShiftKernel::~CGaussianShiftKernel</definition>
        <argsstring>()</argsstring>
        <name>~CGaussianShiftKernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1a9a7dc0ad29bbb2722b3dbd8c3981b666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EKernelType</type>
        <definition>virtual EKernelType shogun::CGaussianShiftKernel::get_kernel_type</definition>
        <argsstring>()</argsstring>
        <name>get_kernel_type</name>
        <reimplements refid="classshogun_1_1CGaussianKernel_1a8dd96eca2825942e9b5d7d06a39e29f0">get_kernel_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return what type of kernel we are</para><para><simplesect kind="return"><para>kernel type GAUSSIANSHIFT </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="70" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1a6f923322cf95446a3df3de1b830f998e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* shogun::CGaussianShiftKernel::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <reimplements refid="classshogun_1_1CGaussianKernel_1ac5493cbcf5d7b1b650752d67d59ee244">get_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the kernel&apos;s name</para><para><simplesect kind="return"><para>name GaussianShift </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="76" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" bodystart="76" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classshogun_1_1CGaussianShiftKernel_1a41441cd531bf38c016ae5dbd302599d1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CGaussianShiftKernel::compute</definition>
        <argsstring>(int32_t idx_a, int32_t idx_b)</argsstring>
        <name>compute</name>
        <reimplements refid="classshogun_1_1CGaussianKernel_1a8f64007dd75011542b99dd97e2fe53b1">compute</reimplements>
        <param>
          <type>int32_t</type>
          <declname>idx_a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>idx_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute kernel function for features a and b idx_{a,b} denote the index of the feature vectors in the corresponding feature object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx_a</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx_b</parametername>
</parameternamelist>
<parameterdescription>
<para>index b </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed kernel function at indices a,b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An experimental kernel inspired by the WeightedDegreePositionStringKernel and the Gaussian kernel. </para>    </briefdescription>
    <detaileddescription>
<para>It is computed as</para><para><formula id="21">\[ k({\bf x},{\bf x&apos;})= \exp(-\frac{||{\bf x}-{\bf x&apos;}||^2}{\tau}) + \sum_{s=1}^{S_{\mathrm{max}}/S_{\mathrm{step}}} \frac{1}{2s} \exp(-\frac{||{\bf x}_{[1:|{\bf x}|-sS_{\mathrm{step}}]}-{\bf x&apos;}_{[sS_{\mathrm{step}}:|{\bf x}|]}||^2}{\tau}) + \sum_{s=1}^{S_{max}/S_{step}} \frac{1}{2s} \exp(-\frac{||{\bf x}_{[sS_{\mathrm{step}}:|{\bf x}|]}-{\bf x&apos;}_{[1:|{\bf x}|-sS_{\mathrm{step}}]}||^2}{\tau}) + \]</formula></para><para>where <formula id="20">$\tau$</formula> is the kernel width. The idea is to shift the dimensions of the input vectors against eachother. <formula id="22">$S_{\mathrm{step}}$</formula> is the step size (parameter shift_step) of the shifts and <formula id="23">$S_{\mathrm{max}}$</formula> (parameter max_shift) is the maximal shift. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="81">
        <label>shogun::CGaussianShiftKernel</label>
        <link refid="classshogun_1_1CGaussianShiftKernel"/>
        <childnode refid="82" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
      </node>
      <node id="83">
        <label>shogun::CSimpleKernel&lt; float64_t &gt;</label>
        <link refid="classshogun_1_1CSimpleKernel"/>
        <childnode refid="84" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>shogun::CGaussianKernel</label>
        <link refid="classshogun_1_1CGaussianKernel"/>
        <childnode refid="83" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="85">
        <label>shogun::CGaussianShiftKernel</label>
        <link refid="classshogun_1_1CGaussianShiftKernel"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
        <childnode refid="89" relation="usage">
          <edgelabel>normalizer</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>shogun::CKernelNormalizer</label>
        <link refid="classshogun_1_1CKernelNormalizer"/>
      </node>
      <node id="87">
        <label>shogun::CSimpleKernel&lt; float64_t &gt;</label>
        <link refid="classshogun_1_1CSimpleKernel"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>shogun::CGaussianKernel</label>
        <link refid="classshogun_1_1CGaussianKernel"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" line="37" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/GaussianShiftKernel.h" bodystart="36" bodyend="94"/>
    <listofallmembers>
      <member refid="classshogun_1_1CKernel_1aabe2fe8e2cc8e2846a6aa60c364855ba" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>add_to_normal</name></member>
      <member refid="classshogun_1_1CKernel_1ae1dc0bbc6ea973b18dcba2e4fac486b8" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>cache_size</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1adceb63c95b45d906d5f5069b61e10871" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CGaussianKernel</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1ae48e090cf0dc246b8c0531d0684e0b94" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CGaussianKernel</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1acafe32a3de19bf1f5724299e084076c8" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CGaussianKernel</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1ad91f8da1ecc5c05c5f7aa2c515b4d073" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CGaussianShiftKernel</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a03c041bb135f3dcc1be6decb762ab420" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CGaussianShiftKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a77872c37fccc650cd7f918b253bbeb68" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1aa2b1f73c8585adee444bb99a98e63a5a" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a70cfe05692f9ee159aeb0dfcb8d2f5c3" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1ae593c118eda68888ad76a88af0367c6e" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CKernel_1a46a94bb5789a5edbf1d776610ae3fa04" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>clear_normal</name></member>
      <member refid="classshogun_1_1CKernel_1a105026c07a74e493c1711dad83b335f1" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a41441cd531bf38c016ae5dbd302599d1" prot="protected" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>compute</name></member>
      <member refid="classshogun_1_1CKernel_1a5fc6a483d63fd0a3460a457cee60f993" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>compute_batch</name></member>
      <member refid="classshogun_1_1CKernel_1a9a0bbc983ee6c2050ee4d5c814496924" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>compute_by_subkernel</name></member>
      <member refid="classshogun_1_1CKernel_1a614b39452046d4336f09c881360b4af7" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>compute_optimized</name></member>
      <member refid="classshogun_1_1CKernel_1a813bcdc6778b8c0b4c662a5209a68776" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>compute_row_start</name></member>
      <member refid="classshogun_1_1CSimpleKernel_1a52a31158ca9b854845324f28e2bcae43" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CSimpleKernel</name></member>
      <member refid="classshogun_1_1CSimpleKernel_1a11838797a925912bb679a8c2148665ea" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CSimpleKernel</name></member>
      <member refid="classshogun_1_1CSimpleKernel_1a8092c0b75fb36b9dcade6971807c0ce1" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>CSimpleKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a1e5b580f5214d5fac1f07c81c2fcb0ad" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>delete_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1ac53fab2767fa28a2141294219ddc5ea5" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a70a87d5839c56ce67efad04119b16758" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CSimpleKernel_1a74991d79eaf19b6fe8582e8257a96636" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CSimpleKernel_1a5e3109e755e2455dc50048249ab0d1f6" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CKernel_1a4e06bfb908463f9bc28b0c3ae7bdeef3" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a1f4f83d3d7bc7e34336c4c262ca95570" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a19c9666c242a0b019f645593e2c63e9f" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a52f510cf6ece0052527f31ad2274e855" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_kernel_matrix_helper</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a9a7dc0ad29bbb2722b3dbd8c3981b666" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_kernel_type</name></member>
      <member refid="classshogun_1_1CKernel_1a0c71c8eb3ac024069c6bd9ff61ec0c39" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_lhs</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a6f923322cf95446a3df3de1b830f998e" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CKernel_1a7aacb7938ed0f98f1fd14253bc1e9b31" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0c2a6eb4ed24590be0cc72a5871f848d" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_num_subkernels</name></member>
      <member refid="classshogun_1_1CKernel_1af350caa123740b96ecaa69fd28454a65" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_num_vec_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a7e45a8f4fc00c39b7d54dd37e001bed9" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_num_vec_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aff5f02561b6963a3c2a2e63b4ac8e43c" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abfd608e83f9839f8ca626ad793e452b0" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aed423e68a226ad9f717d05f54cf9c854" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>get_subkernel_weights</name></member>
      <member refid="classshogun_1_1CKernel_1a6db0206d0b4fe30bf64b93d8eed3b8b7" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>has_features</name></member>
      <member refid="classshogun_1_1CKernel_1afd958e85909aec22c830e9137fcd7d4c" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>has_property</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1a05cb97dfcac6bfced15fca0aa6d96f53" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>init</name></member>
      <member refid="classshogun_1_1CKernel_1aeb0378209b4c63b7ae60596540ebed80" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>init_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a913db590a96e58fadba2b1e9e34a10d6" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>init_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a8363fd727262daf47cad9fb4842daa6c" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>init_optimization_svm</name></member>
      <member refid="classshogun_1_1CKernel_1ab4cbfe2c04238e33322647e22960c246" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a01f88ea73f221b5a768e1c67c731a763" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1ae7bc6b54431a07498f0b6ef4ab087297" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a28ef59e6dd9055579b2f95fb3a19b2cc" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>lhs_equals_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a29e2f0ad2694cc53a800f3ad8be56077" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>list_kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a93221d864190e13c4749793d4ae7f0b0" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>load</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a7e6fdb5aae761b5292fb06c9465a43e5" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>max_shift</name></member>
      <member refid="classshogun_1_1CKernel_1acbe5200168cf7ade8c30f1a1eb40469b" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0d5cfafbf2afd0260857089504262dd6" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>num_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a6e741d3d75546bdc15bfb5be41aa9b96" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>num_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad96fd157602292f3d88ebfef3077be00" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>opt_type</name></member>
      <member refid="classshogun_1_1CKernel_1a5b4d22f0cd136296f6e9aee3364607d6" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>optimization_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a16638a9afae47d4c2e36e20b2dff92f5" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>properties</name></member>
      <member refid="classshogun_1_1CKernel_1a83df3f7334ac9876caaec761ac55314e" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>remove_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad56df090f52a020e34162abd0b0cd0e5" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>remove_lhs_and_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ade2b456ef65c988c59847e6a1d682956" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>remove_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a5dab35da7f429dd860f59d9a98960a3f" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ab1241d4ce37e5352cee96f6b456439c4" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>save</name></member>
      <member refid="classshogun_1_1CKernel_1aa552d8e2591297a3fd5aae46bebaf645" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a23ec2b5c3d824b3f148c905bfbafdebf" prot="public" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CKernel_1ad2d2934daf162bfb010536c1eefd162c" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a0a3fc1096d6e00f56ca0f11cadd12ab7" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a11ab2c3a02fc458f510f36c2fe503a2c" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abd52ab8944c2fd9efd45e46dee4f27ee" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_property</name></member>
      <member refid="classshogun_1_1CKernel_1af1e586162ba4aadc7c0143c1c8819f1a" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>set_subkernel_weights</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1ab90ddeecd22c24996b7299d446da700e" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>shift_step</name></member>
      <member refid="classshogun_1_1CKernel_1a83025690228a1d47e4d43a8ed4304749" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>unset_property</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1ae65d97f4e8ff6349b37ffd333d451f99" prot="protected" virt="non-virtual"><scope>shogun::CGaussianShiftKernel</scope><name>width</name></member>
      <member refid="classshogun_1_1CGaussianKernel_1aa14cf5db2e0d9f444d461dfa7fa773e7" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>~CGaussianKernel</name></member>
      <member refid="classshogun_1_1CGaussianShiftKernel_1a5d21a9b36e91a0951ace1b58ffbc3d4a" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>~CGaussianShiftKernel</name></member>
      <member refid="classshogun_1_1CKernel_1ac0b3e1e0d02e446954712d8245cd68c3" prot="public" virt="virtual"><scope>shogun::CGaussianShiftKernel</scope><name>~CKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
