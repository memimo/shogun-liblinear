<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1COligoStringKernel" kind="class" prot="public">
    <compoundname>shogun::COligoStringKernel</compoundname>
    <basecompoundref refid="classshogun_1_1CStringKernel" prot="public" virt="non-virtual">shogun::CStringKernel&lt; char &gt;</basecompoundref>
    <includes local="no">OligoStringKernel.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1COligoStringKernel_1ab430b29f615f73699d747b88f3d4286b" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::COligoStringKernel::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>member variable k </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="153" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1COligoStringKernel_1a4e1e8817682884520b1564b43ab65b3e" prot="protected" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::COligoStringKernel::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>width of kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="155" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1COligoStringKernel_1aa90ebcac1075f27681ead8cb5ccbb682" prot="protected" static="no" mutable="no">
        <type>float64_t *</type>
        <definition>float64_t* shogun::COligoStringKernel::gauss_table</definition>
        <argsstring></argsstring>
        <name>gauss_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache for exp (see getExpFunctionCache above) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="157" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a50434571a01d0f5831f686a4b3691e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::COligoStringKernel::COligoStringKernel</definition>
        <argsstring>(int32_t cache_size, int32_t k, float64_t width)</argsstring>
        <name>COligoStringKernel</name>
        <param>
          <type>int32_t</type>
          <declname>cache_size</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cache_size</parametername>
</parameternamelist>
<parameterdescription>
<para>cache size for kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>k-mer length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>- equivalent to 2*sigma^2 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1ae58bf70a6ac26599de4830b514a919df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::COligoStringKernel::~COligoStringKernel</definition>
        <argsstring>()</argsstring>
        <name>~COligoStringKernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a04411e8e90214058c8ad10fa462250f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::COligoStringKernel::init</definition>
        <argsstring>(CFeatures *l, CFeatures *r)</argsstring>
        <name>init</name>
        <reimplements refid="classshogun_1_1CStringKernel_1a42b3447b58bb35080b980a7fde823376">init</reimplements>
        <param>
          <type>CFeatures *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CFeatures *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize kernel</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if initializing was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a793a64e4299f7d74d2f81cd589c30555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EKernelType</type>
        <definition>virtual EKernelType shogun::COligoStringKernel::get_kernel_type</definition>
        <argsstring>()</argsstring>
        <name>get_kernel_type</name>
        <reimplements refid="classshogun_1_1CKernel_1a13022c6fd98d925b6088b8c81fa65db9">get_kernel_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return what type of kernel we are</para><para><simplesect kind="return"><para>kernel type OLIGO </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="66" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a009f591e86a8ceaaabef667e28bd38a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* shogun::COligoStringKernel::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the kernel&apos;s name</para><para><simplesect kind="return"><para>name Oligo </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="72" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a5f14fe960d170b2c87595e0a5391c651" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::COligoStringKernel::compute</definition>
        <argsstring>(int32_t x, int32_t y)</argsstring>
        <name>compute</name>
        <reimplements refid="classshogun_1_1CKernel_1ab1765c43943a668fea15971d08ff1229">compute</reimplements>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute kernel function for features a and b idx_{a,b} denote the index of the feature vectors in the corresponding feature object</para><para>abstract base method</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>index a </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>index b </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed kernel function at indices a,b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1aeaabc649c1fd901a9496fb1632c2344f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::COligoStringKernel::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="classshogun_1_1CKernel_1ae593c118eda68888ad76a88af0367c6e">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean up your kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1aaf4a434c8004ec52b14f438a7f40cdb2" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shogun::COligoStringKernel::encodeOligo</definition>
        <argsstring>(const std::string &amp;sequence, uint32_t k_mer_length, const std::string &amp;allowed_characters, std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;values)</argsstring>
        <name>encodeOligo</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>k_mer_length</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>allowed_characters</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>encodes the signals of the sequence </para>        </briefdescription>
        <detaileddescription>
<para>This function stores the oligo function signals in &apos;values&apos;.</para><para>The &apos;k_mer_length&apos; and the &apos;allowed_characters&apos; determine, which signals are used. Every pair contains the position of the signal and a numerical value reflecting the signal. The numerical value represents the k_mer to a base n = |allowed_characters|. Example: The value of k_mer CG for the allowed characters ACGT would be 1 * n^1 + 2 * n^0 = 6. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1aac3182c616248e288be55dfb0019ff5c" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shogun::COligoStringKernel::getSequences</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;sequences, uint32_t k_mer_length, const std::string &amp;allowed_characters, std::vector&lt; std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &gt; &amp;encoded_sequences)</argsstring>
        <name>getSequences</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>sequences</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>k_mer_length</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>allowed_characters</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &gt; &amp;</type>
          <declname>encoded_sequences</declname>
        </param>
        <briefdescription>
<para>encodes all sequences with the encodeOligo function and stores them in &apos;encoded_sequences&apos; </para>        </briefdescription>
        <detaileddescription>
<para>This function encodes the sequences of &apos;sequences&apos; via the function encodeOligo. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a9b2633d1ac8a0ee117a7cace5b5e6640" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float64_t</type>
        <definition>float64_t shogun::COligoStringKernel::kernelOligoFast</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;x, const std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;y, int32_t max_distance=-1)</argsstring>
        <name>kernelOligoFast</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; int32_t, float64_t &gt; &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>max_distance</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>returns the value of the oligo kernel for sequences &apos;x&apos; and &apos;y&apos; </para>        </briefdescription>
        <detaileddescription>
<para>This function computes the kernel value of the oligo kernel, which was introduced by Meinicke et al. in 2004. &apos;x&apos; and &apos;y&apos; are encoded by encodeOligo and &apos;exp_cache&apos; has to be constructed by getExpFunctionCache.</para><para>&apos;max_distance&apos; can be used to speed up the computation even further by restricting the maximum distance between a k_mer at position i in sequence &apos;x&apos; and a k_mer at position j in sequence &apos;y&apos;. If i - j &gt; &apos;max_distance&apos; the value is not added to the kernel value. This approximation is switched off by default (max_distance &lt; 0). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1a739d72146e16c01be51d947fcd13ebbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::COligoStringKernel::getExpFunctionCache</definition>
        <argsstring>(uint32_t sequence_length)</argsstring>
        <name>getExpFunctionCache</name>
        <param>
          <type>uint32_t</type>
          <declname>sequence_length</declname>
        </param>
        <briefdescription>
<para>prepares the exp function cache of the oligo kernel </para>        </briefdescription>
        <detaileddescription>
<para>The oligo kernel was introduced for sequences of fixed length. Let n be the sequence length of sequences x and y. There can only be n different distances between signals in sequence x and sequence y (0, 1, ..., n-1). Therefore, we precompute the corresponding values of the e-function. These values can then be used in kernelOligoFast. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classshogun_1_1COligoStringKernel_1ab84598ca55a614ebfda2a2c9597a5301" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool shogun::COligoStringKernel::cmpOligos_</definition>
        <argsstring>(std::pair&lt; int32_t, float64_t &gt; a, std::pair&lt; int32_t, float64_t &gt; b)</argsstring>
        <name>cmpOligos_</name>
        <param>
          <type>std::pair&lt; int32_t, float64_t &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::pair&lt; int32_t, float64_t &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="147" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="145" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class offers access to the Oligo Kernel introduced by Meinicke et al. in 2004. </para>    </briefdescription>
    <detaileddescription>
<para>The class has functions to preprocess the data such that the kernel computation can be pursued faster. The kernel function is then kernelOligoFast or kernelOligo.</para><para>Requires significant speedup, should be working but as is might be applicable only to academic small scale problems:</para><para><itemizedlist>
<listitem><para>the kernel should only ever see encoded sequences, which however requires another OligoFeatures object (using CSimpleFeatures of pairs)</para></listitem></itemizedlist>
</para><para>Uses <ref refid="classshogun_1_1CSqrtDiagKernelNormalizer" kindref="compound">CSqrtDiagKernelNormalizer</ref>, as the vanilla kernel seems to be very diagonally dominant. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="226">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
      </node>
      <node id="224">
        <label>shogun::COligoStringKernel</label>
        <link refid="classshogun_1_1COligoStringKernel"/>
        <childnode refid="225" relation="public-inheritance">
        </childnode>
      </node>
      <node id="225">
        <label>shogun::CStringKernel&lt; char &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="226" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="229">
        <label>shogun::CKernel</label>
        <link refid="classshogun_1_1CKernel"/>
        <childnode refid="230" relation="usage">
          <edgelabel>normalizer</edgelabel>
        </childnode>
      </node>
      <node id="227">
        <label>shogun::COligoStringKernel</label>
        <link refid="classshogun_1_1COligoStringKernel"/>
        <childnode refid="228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="230">
        <label>shogun::CKernelNormalizer</label>
        <link refid="classshogun_1_1CKernelNormalizer"/>
      </node>
      <node id="228">
        <label>shogun::CStringKernel&lt; char &gt;</label>
        <link refid="classshogun_1_1CStringKernel"/>
        <childnode refid="229" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" line="42" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/kernel/OligoStringKernel.h" bodystart="41" bodyend="158"/>
    <listofallmembers>
      <member refid="classshogun_1_1CKernel_1aabe2fe8e2cc8e2846a6aa60c364855ba" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>add_to_normal</name></member>
      <member refid="classshogun_1_1CKernel_1ae1dc0bbc6ea973b18dcba2e4fac486b8" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a77872c37fccc650cd7f918b253bbeb68" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1aa2b1f73c8585adee444bb99a98e63a5a" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a70cfe05692f9ee159aeb0dfcb8d2f5c3" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>CKernel</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1aeaabc649c1fd901a9496fb1632c2344f" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CKernel_1a46a94bb5789a5edbf1d776610ae3fa04" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>clear_normal</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1ab84598ca55a614ebfda2a2c9597a5301" prot="private" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>cmpOligos_</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a50434571a01d0f5831f686a4b3691e55" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>COligoStringKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a105026c07a74e493c1711dad83b335f1" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>combined_kernel_weight</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a5f14fe960d170b2c87595e0a5391c651" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>compute</name></member>
      <member refid="classshogun_1_1CKernel_1a5fc6a483d63fd0a3460a457cee60f993" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>compute_batch</name></member>
      <member refid="classshogun_1_1CKernel_1a9a0bbc983ee6c2050ee4d5c814496924" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>compute_by_subkernel</name></member>
      <member refid="classshogun_1_1CKernel_1a614b39452046d4336f09c881360b4af7" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>compute_optimized</name></member>
      <member refid="classshogun_1_1CKernel_1a813bcdc6778b8c0b4c662a5209a68776" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>compute_row_start</name></member>
      <member refid="classshogun_1_1CStringKernel_1af170456997db0dda48d7abe68c9f94ce" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CStringKernel_1aa97ba03f6e02171efd195386b6df838e" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>CStringKernel</name></member>
      <member refid="classshogun_1_1CKernel_1a1e5b580f5214d5fac1f07c81c2fcb0ad" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>delete_optimization</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1aaf4a434c8004ec52b14f438a7f40cdb2" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>encodeOligo</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1aa90ebcac1075f27681ead8cb5ccbb682" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>gauss_table</name></member>
      <member refid="classshogun_1_1CKernel_1ac53fab2767fa28a2141294219ddc5ea5" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a70a87d5839c56ce67efad04119b16758" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CStringKernel_1a36d05c13b46e70f5d9bc8d02945b1750" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CStringKernel_1af95571fddbc562ccf38623511a8a629c" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CKernel_1a4e06bfb908463f9bc28b0c3ae7bdeef3" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a1f4f83d3d7bc7e34336c4c262ca95570" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a19c9666c242a0b019f645593e2c63e9f" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_kernel_matrix</name></member>
      <member refid="classshogun_1_1CKernel_1a52f510cf6ece0052527f31ad2274e855" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_kernel_matrix_helper</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a793a64e4299f7d74d2f81cd589c30555" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_kernel_type</name></member>
      <member refid="classshogun_1_1CKernel_1a0c71c8eb3ac024069c6bd9ff61ec0c39" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_lhs</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a009f591e86a8ceaaabef667e28bd38a1" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CKernel_1a7aacb7938ed0f98f1fd14253bc1e9b31" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0c2a6eb4ed24590be0cc72a5871f848d" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_num_subkernels</name></member>
      <member refid="classshogun_1_1CKernel_1af350caa123740b96ecaa69fd28454a65" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_num_vec_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a7e45a8f4fc00c39b7d54dd37e001bed9" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_num_vec_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aff5f02561b6963a3c2a2e63b4ac8e43c" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abfd608e83f9839f8ca626ad793e452b0" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>get_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1aed423e68a226ad9f717d05f54cf9c854" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>get_subkernel_weights</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a739d72146e16c01be51d947fcd13ebbc" prot="private" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>getExpFunctionCache</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1aac3182c616248e288be55dfb0019ff5c" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>getSequences</name></member>
      <member refid="classshogun_1_1CKernel_1a6db0206d0b4fe30bf64b93d8eed3b8b7" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>has_features</name></member>
      <member refid="classshogun_1_1CKernel_1afd958e85909aec22c830e9137fcd7d4c" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>has_property</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a04411e8e90214058c8ad10fa462250f4" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>init</name></member>
      <member refid="classshogun_1_1CKernel_1aeb0378209b4c63b7ae60596540ebed80" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>init_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a913db590a96e58fadba2b1e9e34a10d6" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>init_optimization</name></member>
      <member refid="classshogun_1_1CKernel_1a8363fd727262daf47cad9fb4842daa6c" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>init_optimization_svm</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1ab430b29f615f73699d747b88f3d4286b" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>k</name></member>
      <member refid="classshogun_1_1CKernel_1ab4cbfe2c04238e33322647e22960c246" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a01f88ea73f221b5a768e1c67c731a763" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>kernel_matrix</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a9b2633d1ac8a0ee117a7cace5b5e6640" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>kernelOligoFast</name></member>
      <member refid="classshogun_1_1CKernel_1ae7bc6b54431a07498f0b6ef4ab087297" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a28ef59e6dd9055579b2f95fb3a19b2cc" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>lhs_equals_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a29e2f0ad2694cc53a800f3ad8be56077" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>list_kernel</name></member>
      <member refid="classshogun_1_1CKernel_1a93221d864190e13c4749793d4ae7f0b0" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>load</name></member>
      <member refid="classshogun_1_1CKernel_1acbe5200168cf7ade8c30f1a1eb40469b" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a0d5cfafbf2afd0260857089504262dd6" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>num_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1a6e741d3d75546bdc15bfb5be41aa9b96" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>num_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad96fd157602292f3d88ebfef3077be00" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>opt_type</name></member>
      <member refid="classshogun_1_1CKernel_1a5b4d22f0cd136296f6e9aee3364607d6" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>optimization_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a16638a9afae47d4c2e36e20b2dff92f5" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>properties</name></member>
      <member refid="classshogun_1_1CKernel_1a83df3f7334ac9876caaec761ac55314e" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>remove_lhs</name></member>
      <member refid="classshogun_1_1CKernel_1ad56df090f52a020e34162abd0b0cd0e5" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>remove_lhs_and_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ade2b456ef65c988c59847e6a1d682956" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>remove_rhs</name></member>
      <member refid="classshogun_1_1CKernel_1a5dab35da7f429dd860f59d9a98960a3f" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>rhs</name></member>
      <member refid="classshogun_1_1CKernel_1ab1241d4ce37e5352cee96f6b456439c4" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>save</name></member>
      <member refid="classshogun_1_1CKernel_1aa552d8e2591297a3fd5aae46bebaf645" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>set_cache_size</name></member>
      <member refid="classshogun_1_1CKernel_1a23ec2b5c3d824b3f148c905bfbafdebf" prot="public" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>set_combined_kernel_weight</name></member>
      <member refid="classshogun_1_1CKernel_1ad2d2934daf162bfb010536c1eefd162c" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>set_is_initialized</name></member>
      <member refid="classshogun_1_1CKernel_1a0a3fc1096d6e00f56ca0f11cadd12ab7" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>set_normalizer</name></member>
      <member refid="classshogun_1_1CKernel_1a11ab2c3a02fc458f510f36c2fe503a2c" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>set_optimization_type</name></member>
      <member refid="classshogun_1_1CKernel_1abd52ab8944c2fd9efd45e46dee4f27ee" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>set_property</name></member>
      <member refid="classshogun_1_1CKernel_1af1e586162ba4aadc7c0143c1c8819f1a" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>set_subkernel_weights</name></member>
      <member refid="classshogun_1_1CKernel_1a83025690228a1d47e4d43a8ed4304749" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>unset_property</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1a4e1e8817682884520b1564b43ab65b3e" prot="protected" virt="non-virtual"><scope>shogun::COligoStringKernel</scope><name>width</name></member>
      <member refid="classshogun_1_1CKernel_1ac0b3e1e0d02e446954712d8245cd68c3" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>~CKernel</name></member>
      <member refid="classshogun_1_1COligoStringKernel_1ae58bf70a6ac26599de4830b514a919df" prot="public" virt="virtual"><scope>shogun::COligoStringKernel</scope><name>~COligoStringKernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
