<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CSet" kind="class" prot="public">
    <compoundname>shogun::CSet</compoundname>
    <includes local="no">Set.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CSet_1af62c4db17b3ef68d0b8bf21f7c643a98" prot="protected" static="no" mutable="no">
        <type><ref refid="classshogun_1_1CDynamicArray" kindref="compound">CDynamicArray</ref>&lt; T &gt; *</type>
        <definition>CDynamicArray&lt;T&gt;* shogun::CSet&lt; T &gt;::array</definition>
        <argsstring></argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dynamic array the set is based on </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="112" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CSet_1aa6ead70af919e8e808c0db417328b8e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shogun::CSet&lt; T &gt;::CSet</definition>
        <argsstring>()</argsstring>
        <name>CSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="31" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1a4254aae29834f8c897b4d20867d0822a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shogun::CSet&lt; T &gt;::~CSet</definition>
        <argsstring>()</argsstring>
        <name>~CSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="38" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1aa3d1cfd3e69a2af59b9275cdd855f52f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CSet&lt; T &gt;::add</definition>
        <argsstring>(T e)</argsstring>
        <name>add</name>
        <param>
          <type>T</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an element to the set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>elemet to be added </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="47" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1a9c7f3608eeffdf1d09cc4e6a50eab17b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CSet&lt; T &gt;::remove</definition>
        <argsstring>(T e)</argsstring>
        <name>remove</name>
        <param>
          <type>T</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an element from the set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>elemet to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="57" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1ad264edd3a3c5943dab56817c87b6ae7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shogun::CSet&lt; T &gt;::contains</definition>
        <argsstring>(T e)</argsstring>
        <name>contains</name>
        <param>
          <type>T</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an element from the set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>elemet to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="68" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1a5bae6eaf3a73fe70a2b8fc33d6b760ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t shogun::CSet&lt; T &gt;::get_num_elements</definition>
        <argsstring>() const </argsstring>
        <name>get_num_elements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get number of elements</para><para><simplesect kind="return"><para>number of elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="78" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1a2a84fa6d61bc6c2055e5e5f1d264b4b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T shogun::CSet&lt; T &gt;::get_element</definition>
        <argsstring>(int32_t index) const </argsstring>
        <name>get_element</name>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get set element at index</para><para>(does NOT do bounds checking)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array element at index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="90" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1af2027d223c33835f43830cfeef53842f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T shogun::CSet&lt; T &gt;::operator[]</definition>
        <argsstring>(int32_t index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>operator overload for set read only access use <ref refid="classshogun_1_1CSet_1aa3d1cfd3e69a2af59b9275cdd855f52f" kindref="member">add()</ref> for write access</para><para>DOES NOT DO ANY BOUNDS CHECKING</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>element at index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="103" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSet_1a6bfbe8f65a7d188ca60880b29e79bf9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* shogun::CSet&lt; T &gt;::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>object name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="108" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template Set class. </para>    </briefdescription>
    <detaileddescription>
<para>Lazy implementation of a set. Set grows and shrinks dynamically and can be conveniently iterated through via the [] operator. </para>    </detaileddescription>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" line="27" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/lib/Set.h" bodystart="26" bodyend="113"/>
    <listofallmembers>
      <member refid="classshogun_1_1CSet_1aa3d1cfd3e69a2af59b9275cdd855f52f" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>add</name></member>
      <member refid="classshogun_1_1CSet_1af62c4db17b3ef68d0b8bf21f7c643a98" prot="protected" virt="non-virtual"><scope>shogun::CSet</scope><name>array</name></member>
      <member refid="classshogun_1_1CSet_1ad264edd3a3c5943dab56817c87b6ae7e" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>contains</name></member>
      <member refid="classshogun_1_1CSet_1aa6ead70af919e8e808c0db417328b8e7" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>CSet</name></member>
      <member refid="classshogun_1_1CSet_1a2a84fa6d61bc6c2055e5e5f1d264b4b6" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>get_element</name></member>
      <member refid="classshogun_1_1CSet_1a6bfbe8f65a7d188ca60880b29e79bf9a" prot="public" virt="virtual"><scope>shogun::CSet</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CSet_1a5bae6eaf3a73fe70a2b8fc33d6b760ca" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>get_num_elements</name></member>
      <member refid="classshogun_1_1CSet_1af2027d223c33835f43830cfeef53842f" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>operator[]</name></member>
      <member refid="classshogun_1_1CSet_1a9c7f3608eeffdf1d09cc4e6a50eab17b" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>remove</name></member>
      <member refid="classshogun_1_1CSet_1a4254aae29834f8c897b4d20867d0822a" prot="public" virt="non-virtual"><scope>shogun::CSet</scope><name>~CSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
