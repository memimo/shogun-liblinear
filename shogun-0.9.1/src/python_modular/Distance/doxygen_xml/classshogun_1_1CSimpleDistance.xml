<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CSimpleDistance" kind="class" prot="public">
    <compoundname>shogun::CSimpleDistance</compoundname>
    <basecompoundref refid="classshogun_1_1CDistance" prot="public" virt="non-virtual">shogun::CDistance</basecompoundref>
    <includes local="no">SimpleDistance.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>ST</declname>
        <defname>ST</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1ad8a3abbb66312e52e26e4289c68eb495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shogun::CSimpleDistance&lt; ST &gt;::CSimpleDistance</definition>
        <argsstring>()</argsstring>
        <name>CSimpleDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="25" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1af17ea30fdcb2bd37d0c94f9eca95db86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CSimpleDistance&lt; ST &gt;::init</definition>
        <argsstring>(CFeatures *l, CFeatures *r)</argsstring>
        <name>init</name>
        <reimplements refid="classshogun_1_1CDistance_1a96a90ef016aae62a056c80a440a878f5">init</reimplements>
        <reimplementedby refid="classshogun_1_1CTanimotoDistance_1a5d28568f72a7bb82c3c044fc26d0cbee">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CRealDistance_1a27ca85268a339c2039c1672fd8f6f827">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CMinkowskiMetric_1ad29d2298ed27fabdc812326b00ce60cf">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CManhattanMetric_1a093a7d66ec252e7f591f13c62f5c4fe0">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CJensenMetric_1a41fa39cc203ecb5c59e0a9fcb078e8b9">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGeodesicMetric_1add3ea2c0e721b50230a6364255f1b573">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CEuclidianDistance_1adcf6812e65f9f3a72234c70137a6625d">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CCosineDistance_1a28ba1fff0ba5461b123cd2d9385c20b5">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CChiSquareDistance_1a947a63f7001d0e1aa72989544752ae7c">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CChebyshewMetric_1a1c35c0750b45583840a81a92f43170d0">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CCanberraMetric_1a07696ad61ba6e41d2b1ff66c2188cbc0">init</reimplementedby>
        <reimplementedby refid="classshogun_1_1CBrayCurtisDistance_1afd37db2427f93b1c67504207a32f337f">init</reimplementedby>
        <param>
          <type>CFeatures *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CFeatures *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>init distance</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>features of left-hand side </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>features of right-hand side </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if init was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="34" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="33" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a01020ebeb5cf65bb9a8053f3184bed9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EFeatureClass</type>
        <definition>virtual EFeatureClass shogun::CSimpleDistance&lt; ST &gt;::get_feature_class</definition>
        <argsstring>()</argsstring>
        <name>get_feature_class</name>
        <reimplements refid="classshogun_1_1CDistance_1a2b6bbc08663743e3c52ebcf9ddd7cede">get_feature_class</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature class the distance can deal with</para><para><simplesect kind="return"><para>feature class SIMPLE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="56" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a33a5b1fdb5a8095b1cb817f2d36b460a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EFeatureType</type>
        <definition>virtual EFeatureType shogun::CSimpleDistance&lt; ST &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <reimplementedby refid="classshogun_1_1CRealDistance_1a29658564f913e671d9dc9319867dab2e">get_feature_type</reimplementedby>
        <reimplementedby refid="classshogun_1_1CEuclidianDistance_1aa59973b8257044038a50052a3afbe227">get_feature_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the distance can deal with</para><para><simplesect kind="return"><para>template-specific feature type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a31d605891a02ff2d788358404c7b4bcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; float64_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the DREAL distance can deal with</para><para><simplesect kind="return"><para>feature type DREAL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="69" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a150ed3ee1f473063d547b9c2f335056e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; uint64_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the ULONG distance can deal with</para><para><simplesect kind="return"><para>feature type ULONG </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="75" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a646a65bc285e2ed0d7746549043d7961" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; int32_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the INT distance can deal with</para><para><simplesect kind="return"><para>feature type INT </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="81" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a49dc0bc273897723f89f59797369a344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; uint16_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the WORD distance can deal with</para><para><simplesect kind="return"><para>feature type WORD </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="87" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1aee59d1a69b228607982ed02e8b0049bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; int16_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the SHORT distance can deal with</para><para><simplesect kind="return"><para>feature type SHORT </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="93" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1af84aa1b194b58609444cbb4287ff5297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; uint8_t &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the BYTE distance can deal with</para><para><simplesect kind="return"><para>feature type BYTE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="99" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSimpleDistance_1a0f608e5699d0b74e40ec8adcade71f6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>EFeatureType</type>
        <definition>EFeatureType shogun::CSimpleDistance&lt; char &gt;::get_feature_type</definition>
        <argsstring>()</argsstring>
        <name>get_feature_type</name>
        <reimplements refid="classshogun_1_1CDistance_1a03920f704c53a2815f5db5a9b42a7b9f">get_feature_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature type the CHAR distance can deal with</para><para><simplesect kind="return"><para>feature type CHAR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="105" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>template class SimpleDistance </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="111">
        <label>shogun::CSimpleDistance&lt; ST &gt;</label>
        <link refid="classshogun_1_1CSimpleDistance"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>shogun::CDistance</label>
        <link refid="classshogun_1_1CDistance"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="113">
        <label>shogun::CSimpleDistance&lt; ST &gt;</label>
        <link refid="classshogun_1_1CSimpleDistance"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>shogun::CDistance</label>
        <link refid="classshogun_1_1CDistance"/>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" line="22" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distance/SimpleDistance.h" bodystart="21" bodyend="63"/>
    <listofallmembers>
      <member refid="classshogun_1_1CDistance_1ac7711f406989e3650d18dc83d31e51e4" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>CDistance</name></member>
      <member refid="classshogun_1_1CDistance_1aa3d9c5357102a59379da320189734ebd" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>CDistance</name></member>
      <member refid="classshogun_1_1CDistance_1a12832f73a19b04488f0efda083dfa2a4" prot="public" virt="pure-virtual"><scope>shogun::CSimpleDistance</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CDistance_1aa55722bf35a997e7502d4d84c21d5f01" prot="protected" virt="pure-virtual"><scope>shogun::CSimpleDistance</scope><name>compute</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1ad8a3abbb66312e52e26e4289c68eb495" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>CSimpleDistance</name></member>
      <member refid="classshogun_1_1CDistance_1a162c1fa451dd9267c15216aef28b4003" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>distance</name></member>
      <member refid="classshogun_1_1CDistance_1a8089932a048d5ebff0bf279448c98960" prot="protected" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>do_precompute_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1a84c529f0578ef7c4084c2457c2fb5188" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_distance_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1a612d2ffac1258ec986ae836ce3a78d6c" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_distance_matrix_real</name></member>
      <member refid="classshogun_1_1CDistance_1a9681314057e505ad5c1aa93a05983e2a" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_distance_matrix_shortreal</name></member>
      <member refid="classshogun_1_1CDistance_1a93d139c95d20cea805e95db8c36f83a3" prot="public" virt="pure-virtual"><scope>shogun::CSimpleDistance</scope><name>get_distance_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a01020ebeb5cf65bb9a8053f3184bed9c" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a33a5b1fdb5a8095b1cb817f2d36b460a" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a31d605891a02ff2d788358404c7b4bcc" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a150ed3ee1f473063d547b9c2f335056e" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a646a65bc285e2ed0d7746549043d7961" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a49dc0bc273897723f89f59797369a344" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1aee59d1a69b228607982ed02e8b0049bf" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1af84aa1b194b58609444cbb4287ff5297" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1a0f608e5699d0b74e40ec8adcade71f6d" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CDistance_1af345439df47a38f294106fe318a3e760" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_lhs</name></member>
      <member refid="classshogun_1_1CDistance_1acb26117edc0ef325aa36989328db9941" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_num_vec_lhs</name></member>
      <member refid="classshogun_1_1CDistance_1a57a7d3f55de91c8467633ae94c92fb7f" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_num_vec_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1ac83a7393d28483420996597a402ac8be" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_precompute_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1a6bffc5be35b5a80f34125db203821cd3" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>get_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1a5d8ea29b5d0de2bd5f350122b6ff0465" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>has_features</name></member>
      <member refid="classshogun_1_1CSimpleDistance_1af17ea30fdcb2bd37d0c94f9eca95db86" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>init</name></member>
      <member refid="classshogun_1_1CDistance_1adb921211288ff18826b285ab214b87eb" prot="protected" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>lhs</name></member>
      <member refid="classshogun_1_1CDistance_1adc977a31f34e849d64ddfbb3bca1ee06" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>lhs_equals_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1a44e221e6bcb20925ed6dd1d424c15d54" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>load</name></member>
      <member refid="classshogun_1_1CDistance_1a96e1d129ebafe7d69fc43147ae52e97f" prot="protected" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>precompute_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1af6a193233bec588c95ab38d43e0f14be" prot="protected" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>precomputed_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1afe1e59a6b35a2d35d6f1e6dcdfc94c6a" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>remove_lhs</name></member>
      <member refid="classshogun_1_1CDistance_1a6adfb2fc33a9ce11e58bc5b203f9bf64" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>remove_lhs_and_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1a179d17698dfd89af6dbdfcc3eb8c7544" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>remove_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1a4ae58108d7045ac73b7dcf4b464f3784" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>replace_rhs</name></member>
      <member refid="classshogun_1_1CDistance_1ae35805ff2db463ffb6b18e9cece75f02" prot="protected" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>rhs</name></member>
      <member refid="classshogun_1_1CDistance_1a789639ca40faccda219e4c6e509cd5ca" prot="public" virt="non-virtual"><scope>shogun::CSimpleDistance</scope><name>save</name></member>
      <member refid="classshogun_1_1CDistance_1a29136001933dfc82c5f76e0255f401c1" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>set_precompute_matrix</name></member>
      <member refid="classshogun_1_1CDistance_1ae781fab41be1536aa17cca88e3002022" prot="public" virt="virtual"><scope>shogun::CSimpleDistance</scope><name>~CDistance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
