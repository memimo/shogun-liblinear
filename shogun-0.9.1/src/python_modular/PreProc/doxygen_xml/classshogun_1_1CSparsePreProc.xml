<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CSparsePreProc" kind="class" prot="public">
    <compoundname>shogun::CSparsePreProc</compoundname>
    <basecompoundref refid="classshogun_1_1CPreProc" prot="public" virt="non-virtual">shogun::CPreProc</basecompoundref>
    <includes local="no">SparsePreProc.h</includes>
    <templateparamlist>
      <param>
        <type>class ST</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CSparsePreProc_1a66066a37811ab13e5a57f3eb5ec66dd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shogun::CSparsePreProc&lt; ST &gt;::CSparsePreProc</definition>
        <argsstring>(const char *name, const char *id)</argsstring>
        <name>CSparsePreProc</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>sparse preprocessor&apos;s name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sparse preprocessor&apos;s id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" line="42" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSparsePreProc_1a19aeeaab3e27227917e857e652ce01fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>TSparse&lt; ST &gt; *</type>
        <definition>virtual TSparse&lt;ST&gt;* shogun::CSparsePreProc&lt; ST &gt;::apply_to_sparse_feature_matrix</definition>
        <argsstring>(CSparseFeatures&lt; ST &gt; *f)=0</argsstring>
        <name>apply_to_sparse_feature_matrix</name>
        <param>
          <type>CSparseFeatures&lt; ST &gt; *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apply preproc on feature matrix result in feature matrix return pointer to feature_matrix, i.e. f-&gt;get_feature_matrix(); </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSparsePreProc_1a668ebd3a8f6d9e57cd63361fa5934400" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>TSparse&lt; ST &gt; *</type>
        <definition>virtual TSparse&lt;ST&gt;* shogun::CSparsePreProc&lt; ST &gt;::apply_to_sparse_feature_vector</definition>
        <argsstring>(TSparse&lt; ST &gt; *f, int32_t &amp;len)=0</argsstring>
        <name>apply_to_sparse_feature_vector</name>
        <param>
          <type>TSparse&lt; ST &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apply preproc on single feature vector result in feature matrix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CSparsePreProc_1a2903eb6a628434eb078c0bcc9afd8518" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>EFeatureClass</type>
        <definition>virtual EFeatureClass shogun::CSparsePreProc&lt; ST &gt;::get_feature_class</definition>
        <argsstring>()</argsstring>
        <name>get_feature_class</name>
        <reimplements refid="classshogun_1_1CPreProc_1a917101137fbee06eeba9d09a37c063bf">get_feature_class</reimplements>
        <briefdescription>
<para>return that we are simple minded features (just fixed size matrices) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" line="55" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" bodystart="55" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template class SparsePreProc, base class for preprocessors (cf. <ref refid="classshogun_1_1CPreProc" kindref="compound">CPreProc</ref>) that apply to CSparseFeatures. </para>    </briefdescription>
    <detaileddescription>
<para>Two new functions <ref refid="classshogun_1_1CSparsePreProc_1a668ebd3a8f6d9e57cd63361fa5934400" kindref="member">apply_to_sparse_feature_vector()</ref> and <ref refid="classshogun_1_1CSparsePreProc_1a19aeeaab3e27227917e857e652ce01fe" kindref="member">apply_to_sparse_feature_matrix()</ref> are defined in this interface that need to be implemented in each particular preprocessor operating on CSparseFeatures. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="62">
        <label>shogun::CPreProc</label>
        <link refid="classshogun_1_1CPreProc"/>
      </node>
      <node id="61">
        <label>shogun::CSparsePreProc&lt; ST &gt;</label>
        <link refid="classshogun_1_1CSparsePreProc"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="64">
        <label>shogun::CPreProc</label>
        <link refid="classshogun_1_1CPreProc"/>
      </node>
      <node id="63">
        <label>shogun::CSparsePreProc&lt; ST &gt;</label>
        <link refid="classshogun_1_1CSparsePreProc"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" line="34" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/preproc/SparsePreProc.h" bodystart="33" bodyend="57"/>
    <listofallmembers>
      <member refid="classshogun_1_1CSparsePreProc_1a19aeeaab3e27227917e857e652ce01fe" prot="public" virt="pure-virtual"><scope>shogun::CSparsePreProc</scope><name>apply_to_sparse_feature_matrix</name></member>
      <member refid="classshogun_1_1CSparsePreProc_1a668ebd3a8f6d9e57cd63361fa5934400" prot="public" virt="pure-virtual"><scope>shogun::CSparsePreProc</scope><name>apply_to_sparse_feature_vector</name></member>
      <member refid="classshogun_1_1CPreProc_1a0f043eb1dd251b49cb3cf3ecf44b1c4b" prot="public" virt="pure-virtual"><scope>shogun::CSparsePreProc</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CPreProc_1a42cd824b1e730557f07884dc6eb98e51" prot="public" virt="non-virtual"><scope>shogun::CSparsePreProc</scope><name>CPreProc</name></member>
      <member refid="classshogun_1_1CSparsePreProc_1a66066a37811ab13e5a57f3eb5ec66dd0" prot="public" virt="non-virtual"><scope>shogun::CSparsePreProc</scope><name>CSparsePreProc</name></member>
      <member refid="classshogun_1_1CSparsePreProc_1a2903eb6a628434eb078c0bcc9afd8518" prot="public" virt="virtual"><scope>shogun::CSparsePreProc</scope><name>get_feature_class</name></member>
      <member refid="classshogun_1_1CPreProc_1a29b1c1bbd8b45c6aa3aca8e082e2ec5d" prot="public" virt="pure-virtual"><scope>shogun::CSparsePreProc</scope><name>get_feature_type</name></member>
      <member refid="classshogun_1_1CPreProc_1a66dbec59819cb9ed7023fc47608ccad7" prot="public" virt="non-virtual"><scope>shogun::CSparsePreProc</scope><name>get_id</name></member>
      <member refid="classshogun_1_1CPreProc_1ade7d07b45284bdae48abe425b0bf5a40" prot="public" virt="virtual"><scope>shogun::CSparsePreProc</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CPreProc_1afe50f73057b75cb494a9a4ab253258d6" prot="public" virt="pure-virtual"><scope>shogun::CSparsePreProc</scope><name>init</name></member>
      <member refid="classshogun_1_1CPreProc_1a7905211b1e156831e64768d936351fa8" prot="protected" virt="non-virtual"><scope>shogun::CSparsePreProc</scope><name>preproc_id</name></member>
      <member refid="classshogun_1_1CPreProc_1a58f21d152eaba8e982f98806d8496db3" prot="protected" virt="non-virtual"><scope>shogun::CSparsePreProc</scope><name>preproc_name</name></member>
      <member refid="classshogun_1_1CPreProc_1a037b99bfd3bacbb3135525e81b134c57" prot="public" virt="virtual"><scope>shogun::CSparsePreProc</scope><name>~CPreProc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
