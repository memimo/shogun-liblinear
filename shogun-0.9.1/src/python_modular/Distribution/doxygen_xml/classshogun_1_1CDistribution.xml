<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CDistribution" kind="class" prot="public">
    <compoundname>shogun::CDistribution</compoundname>
    <derivedcompoundref refid="classshogun_1_1CGHMM" prot="public" virt="non-virtual">shogun::CGHMM</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CHistogram" prot="public" virt="non-virtual">shogun::CHistogram</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CHMM" prot="public" virt="non-virtual">shogun::CHMM</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CLinearHMM" prot="public" virt="non-virtual">shogun::CLinearHMM</derivedcompoundref>
    <includes local="no">Distribution.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CDistribution_1aa16fadbf5702b9afb2be003b040a4d03" prot="protected" static="no" mutable="no">
        <type>CFeatures *</type>
        <definition>CFeatures* shogun::CDistribution::features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>feature vectors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="172" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CDistribution_1aa3ab2ac558050ec4fddda8b4af1701bd" prot="protected" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::CDistribution::pseudo_count</definition>
        <argsstring></argsstring>
        <name>pseudo_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pseudo count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="174" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a6e20cc37e338851fab4ab27790dbf2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CDistribution::CDistribution</definition>
        <argsstring>()</argsstring>
        <name>CDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1ab38fcafc652e448eeb7e4d11ed971ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CDistribution::~CDistribution</definition>
        <argsstring>()</argsstring>
        <name>~CDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a597d0b1c5477f7df960ae30bc1bd6153" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CDistribution::train</definition>
        <argsstring>(CFeatures *data=NULL)=0</argsstring>
        <name>train</name>
        <reimplementedby refid="classshogun_1_1CLinearHMM_1a5845a94aec6ee5c0bdb31b9116f556f6">train</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHMM_1a3ee09e1ab26aabbef44ba2a13dde60f4">train</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHistogram_1a338b59b18033d9d635a27fc939f70bf8">train</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGHMM_1ab7187eb94d0b91724427184732613092">train</reimplementedby>
        <param>
          <type>CFeatures *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>learn distribution</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>training data (parameter can be avoided if distance or kernel-based classifiers are used and distance/kernels are initialized with train data)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether training was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a9c1bdc1a6cf95b63bb197af2744ad43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int32_t</type>
        <definition>virtual int32_t shogun::CDistribution::get_num_model_parameters</definition>
        <argsstring>()=0</argsstring>
        <name>get_num_model_parameters</name>
        <reimplementedby refid="classshogun_1_1CLinearHMM_1a4baabc9bb55555f16a68c060c263d4f2">get_num_model_parameters</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHMM_1a5f24536584a97f8ac6a4af1d2b5a4d8e">get_num_model_parameters</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHistogram_1ad20631537950c9e81baad1e12a9b7cf8">get_num_model_parameters</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGHMM_1a6f3406fd1922eeee66d8fc0dc8718638">get_num_model_parameters</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get number of parameters in model</para><para>abstract base method</para><para><simplesect kind="return"><para>number of parameters in model </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1ab7b1cd7fb4857be73cff243a4ff089d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int32_t</type>
        <definition>virtual int32_t shogun::CDistribution::get_num_relevant_model_parameters</definition>
        <argsstring>()</argsstring>
        <name>get_num_relevant_model_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get number of parameters in model that are relevant, i.e. &gt; ALMOST_NEG_INFTY</para><para><simplesect kind="return"><para>number of relevant model parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a1a9f694299e08e7ff45b7d4626d13c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_log_model_parameter</definition>
        <argsstring>(int32_t num_param)=0</argsstring>
        <name>get_log_model_parameter</name>
        <reimplementedby refid="classshogun_1_1CLinearHMM_1a206eba813b97d4377fe7ba8957e9d2fb">get_log_model_parameter</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHMM_1aaa395269dffeed67e08248ba89cd4653">get_log_model_parameter</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHistogram_1a8741ffed3ff7bd7887b4f332b8ddcc2c">get_log_model_parameter</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGHMM_1a507c756125cbfb3b983a69facaf7e03f">get_log_model_parameter</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>num_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get model parameter (logarithmic)</para><para>abstrac base method</para><para><simplesect kind="return"><para>model parameter (logarithmic) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1adf3ca306e936267b3b60aaf56254db25" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_log_derivative</definition>
        <argsstring>(int32_t num_param, int32_t num_example)=0</argsstring>
        <name>get_log_derivative</name>
        <reimplementedby refid="classshogun_1_1CLinearHMM_1ae60d2ce83490cf70f0134beb24c7f1fc">get_log_derivative</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHMM_1af0e76300817bfe977c71df286d1fc79b">get_log_derivative</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHistogram_1ad4d5ca5219c051f88c41262334c30ee6">get_log_derivative</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGHMM_1aaa84c0659a9b0033afc7f2d4736dc59a">get_log_derivative</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>num_param</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>num_example</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get partial derivative of likelihood function (logarithmic)</para><para>abstract base method</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_param</parametername>
</parameternamelist>
<parameterdescription>
<para>derivative against which param </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_example</parametername>
</parameternamelist>
<parameterdescription>
<para>which example </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>derivative of likelihood (logarithmic) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1ad3f236813136beae6e79f5bc8c86a859" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_log_likelihood_example</definition>
        <argsstring>(int32_t num_example)=0</argsstring>
        <name>get_log_likelihood_example</name>
        <reimplementedby refid="classshogun_1_1CLinearHMM_1a9b4f1a962a55b83e8d8f3a8422ec27cc">get_log_likelihood_example</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHMM_1af463388dbbb4d64d10b4133f0da4826a">get_log_likelihood_example</reimplementedby>
        <reimplementedby refid="classshogun_1_1CHistogram_1ac9a4e6b8ce875bf1ad02f438c881ee76">get_log_likelihood_example</reimplementedby>
        <reimplementedby refid="classshogun_1_1CGHMM_1a31c81748c8565334c153fbca8922262a">get_log_likelihood_example</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>num_example</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute log likelihood for example</para><para>abstract base method</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_example</parametername>
</parameternamelist>
<parameterdescription>
<para>which example </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>log likelihood for example </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a36cfa0a92291fafb06104ab26d18f6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_log_likelihood_sample</definition>
        <argsstring>()</argsstring>
        <name>get_log_likelihood_sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute log likelihood for whole sample</para><para><simplesect kind="return"><para>log likelihood for whole sample </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1af4853a6dfc897960a9a8ad0840cb9454" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CDistribution::get_log_likelihood</definition>
        <argsstring>(float64_t **dst, int32_t *num)</argsstring>
        <name>get_log_likelihood</name>
        <param>
          <type>float64_t **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute log likelihood for each example</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>where likelihood will be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>where number of likelihoods will be stored </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1acd1de9ba85de99b69b6b5bb65d89560f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_model_parameter</definition>
        <argsstring>(int32_t num_param)</argsstring>
        <name>get_model_parameter</name>
        <param>
          <type>int32_t</type>
          <declname>num_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get model parameter</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_param</parametername>
</parameternamelist>
<parameterdescription>
<para>which param </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>model parameter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="120" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1abc111da5e0301c31bce0358c2422812a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_derivative</definition>
        <argsstring>(int32_t num_param, int32_t num_example)</argsstring>
        <name>get_derivative</name>
        <param>
          <type>int32_t</type>
          <declname>num_param</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>num_example</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get partial derivative of likelihood function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_param</parametername>
</parameternamelist>
<parameterdescription>
<para>partial derivative against which param </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_example</parametername>
</parameternamelist>
<parameterdescription>
<para>which example </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>derivative of likelihood function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="132" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1ae473ea3939f5fe4143ba702cc66cf6ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_likelihood_example</definition>
        <argsstring>(int32_t num_example)</argsstring>
        <name>get_likelihood_example</name>
        <param>
          <type>int32_t</type>
          <declname>num_example</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute likelihood for example</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_example</parametername>
</parameternamelist>
<parameterdescription>
<para>which example </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>likelihood for example </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="142" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a79b46db2697086c233e7768bf50d529c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CDistribution::set_features</definition>
        <argsstring>(CFeatures *f)</argsstring>
        <name>set_features</name>
        <param>
          <type>CFeatures *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set feature vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>new feature vectors </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="150" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a86fdfaf1ff09ee2b74aa75ce5b5faeab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>CFeatures *</type>
        <definition>virtual CFeatures* shogun::CDistribution::get_features</definition>
        <argsstring>()</argsstring>
        <name>get_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get feature vectors</para><para><simplesect kind="return"><para>feature vectors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="156" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a3ca440f678c2f556e287dd007f2d6e2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CDistribution::set_pseudo_count</definition>
        <argsstring>(float64_t pseudo)</argsstring>
        <name>set_pseudo_count</name>
        <param>
          <type>float64_t</type>
          <declname>pseudo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set pseudo count</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pseudo</parametername>
</parameternamelist>
<parameterdescription>
<para>new pseudo count </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="162" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CDistribution_1a1e850dcb3692d4f507039dd86368dce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CDistribution::get_pseudo_count</definition>
        <argsstring>()</argsstring>
        <name>get_pseudo_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get pseudo count</para><para><simplesect kind="return"><para>pseudo count </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="168" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="168" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class Distribution from which all methods implementing a distribution are derived. </para>    </briefdescription>
    <detaileddescription>
<para>Distributions are based on some general feature object and have to implement interfaces to</para><para><ref refid="classshogun_1_1CDistribution_1a597d0b1c5477f7df960ae30bc1bd6153" kindref="member">train()</ref> - for learning a distribution <ref refid="classshogun_1_1CDistribution_1a9c1bdc1a6cf95b63bb197af2744ad43f" kindref="member">get_num_model_parameters()</ref> - for the total number of model parameters <ref refid="classshogun_1_1CDistribution_1a1a9f694299e08e7ff45b7d4626d13c17" kindref="member">get_log_model_parameter()</ref> - for the n-th model parameter (logarithmic) <ref refid="classshogun_1_1CDistribution_1adf3ca306e936267b3b60aaf56254db25" kindref="member">get_log_derivative()</ref> - for the partial derivative wrt. to the n-th model parameter <ref refid="classshogun_1_1CDistribution_1ad3f236813136beae6e79f5bc8c86a859" kindref="member">get_log_likelihood_example()</ref> - for the likelihood for the n-th example</para><para>This way methods building on <ref refid="classshogun_1_1CDistribution" kindref="compound">CDistribution</ref>, might enumerate over all possible model parameters and obtain the parameter vector and the gradient. This is used to compute e.g. the TOP and Fisher Kernel (cf. CPluginEstimate, CHistogramKernel, CTOPFeatures and CFKFeatures ). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>shogun::CGHMM</label>
        <link refid="classshogun_1_1CGHMM"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>shogun::CHistogram</label>
        <link refid="classshogun_1_1CHistogram"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>shogun::CHMM</label>
        <link refid="classshogun_1_1CHMM"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>shogun::CLinearHMM</label>
        <link refid="classshogun_1_1CLinearHMM"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="0">
        <label>shogun::CDistribution</label>
        <link refid="classshogun_1_1CDistribution"/>
      </node>
    </inheritancegraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" line="42" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/distributions/Distribution.h" bodystart="41" bodyend="175"/>
    <listofallmembers>
      <member refid="classshogun_1_1CDistribution_1a6e20cc37e338851fab4ab27790dbf2f5" prot="public" virt="non-virtual"><scope>shogun::CDistribution</scope><name>CDistribution</name></member>
      <member refid="classshogun_1_1CDistribution_1aa16fadbf5702b9afb2be003b040a4d03" prot="protected" virt="non-virtual"><scope>shogun::CDistribution</scope><name>features</name></member>
      <member refid="classshogun_1_1CDistribution_1abc111da5e0301c31bce0358c2422812a" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_derivative</name></member>
      <member refid="classshogun_1_1CDistribution_1a86fdfaf1ff09ee2b74aa75ce5b5faeab" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_features</name></member>
      <member refid="classshogun_1_1CDistribution_1ae473ea3939f5fe4143ba702cc66cf6ae" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_likelihood_example</name></member>
      <member refid="classshogun_1_1CDistribution_1adf3ca306e936267b3b60aaf56254db25" prot="public" virt="pure-virtual"><scope>shogun::CDistribution</scope><name>get_log_derivative</name></member>
      <member refid="classshogun_1_1CDistribution_1af4853a6dfc897960a9a8ad0840cb9454" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_log_likelihood</name></member>
      <member refid="classshogun_1_1CDistribution_1ad3f236813136beae6e79f5bc8c86a859" prot="public" virt="pure-virtual"><scope>shogun::CDistribution</scope><name>get_log_likelihood_example</name></member>
      <member refid="classshogun_1_1CDistribution_1a36cfa0a92291fafb06104ab26d18f6d5" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_log_likelihood_sample</name></member>
      <member refid="classshogun_1_1CDistribution_1a1a9f694299e08e7ff45b7d4626d13c17" prot="public" virt="pure-virtual"><scope>shogun::CDistribution</scope><name>get_log_model_parameter</name></member>
      <member refid="classshogun_1_1CDistribution_1acd1de9ba85de99b69b6b5bb65d89560f" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_model_parameter</name></member>
      <member refid="classshogun_1_1CDistribution_1a9c1bdc1a6cf95b63bb197af2744ad43f" prot="public" virt="pure-virtual"><scope>shogun::CDistribution</scope><name>get_num_model_parameters</name></member>
      <member refid="classshogun_1_1CDistribution_1ab7b1cd7fb4857be73cff243a4ff089d2" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_num_relevant_model_parameters</name></member>
      <member refid="classshogun_1_1CDistribution_1a1e850dcb3692d4f507039dd86368dce6" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>get_pseudo_count</name></member>
      <member refid="classshogun_1_1CDistribution_1aa3ab2ac558050ec4fddda8b4af1701bd" prot="protected" virt="non-virtual"><scope>shogun::CDistribution</scope><name>pseudo_count</name></member>
      <member refid="classshogun_1_1CDistribution_1a79b46db2697086c233e7768bf50d529c" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>set_features</name></member>
      <member refid="classshogun_1_1CDistribution_1a3ca440f678c2f556e287dd007f2d6e2a" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>set_pseudo_count</name></member>
      <member refid="classshogun_1_1CDistribution_1a597d0b1c5477f7df960ae30bc1bd6153" prot="public" virt="pure-virtual"><scope>shogun::CDistribution</scope><name>train</name></member>
      <member refid="classshogun_1_1CDistribution_1ab38fcafc652e448eeb7e4d11ed971ed1" prot="public" virt="virtual"><scope>shogun::CDistribution</scope><name>~CDistribution</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
