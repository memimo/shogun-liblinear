<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CMultiClassSVM" kind="class" prot="public">
    <compoundname>shogun::CMultiClassSVM</compoundname>
    <basecompoundref refid="classshogun_1_1CSVM" prot="public" virt="non-virtual">shogun::CSVM</basecompoundref>
    <derivedcompoundref refid="classshogun_1_1CGMNPSVM" prot="public" virt="non-virtual">shogun::CGMNPSVM</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CLaRank" prot="public" virt="non-virtual">shogun::CLaRank</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CLibSVMMultiClass" prot="public" virt="non-virtual">shogun::CLibSVMMultiClass</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CMKLMultiClass" prot="public" virt="non-virtual">shogun::CMKLMultiClass</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CScatterSVM" prot="public" virt="non-virtual">shogun::CScatterSVM</derivedcompoundref>
    <includes local="no">MultiClassSVM.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CMultiClassSVM_1aaba78143262f00e356b7e8f643124f81" prot="protected" static="no" mutable="no">
        <type>EMultiClassSVM</type>
        <definition>EMultiClassSVM shogun::CMultiClassSVM::multiclass_type</definition>
        <argsstring></argsstring>
        <name>multiclass_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type of MultiClassSVM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="141" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CMultiClassSVM_1a9209eca2e3955be1a4fdd0491689edd1" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CMultiClassSVM::m_num_classes</definition>
        <argsstring></argsstring>
        <name>m_num_classes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of classes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="144" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CMultiClassSVM_1a7fa029f4b26b5bd92a70b990f76663cb" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CMultiClassSVM::m_num_svms</definition>
        <argsstring></argsstring>
        <name>m_num_svms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of SVMs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="146" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CMultiClassSVM_1a573287700677f15e71c4d0ca6926b592" prot="protected" static="no" mutable="no">
        <type><ref refid="classshogun_1_1CSVM" kindref="compound">CSVM</ref> **</type>
        <definition>CSVM** shogun::CMultiClassSVM::m_svms</definition>
        <argsstring></argsstring>
        <name>m_svms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the SVMs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="148" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1aa572b39323fb484992fa1af1bd68e9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CMultiClassSVM::CMultiClassSVM</definition>
        <argsstring>(EMultiClassSVM type)</argsstring>
        <name>CMultiClassSVM</name>
        <param>
          <type>EMultiClassSVM</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of MultiClassSVM </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1aa6c95f2f5a7813d8f73cbae2b669e11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CMultiClassSVM::CMultiClassSVM</definition>
        <argsstring>(EMultiClassSVM type, float64_t C, CKernel *k, CLabels *lab)</argsstring>
        <name>CMultiClassSVM</name>
        <param>
          <type>EMultiClassSVM</type>
          <declname>type</declname>
        </param>
        <param>
          <type>float64_t</type>
          <declname>C</declname>
        </param>
        <param>
          <type>CKernel *</type>
          <declname>k</declname>
        </param>
        <param>
          <type>CLabels *</type>
          <declname>lab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of MultiClassSVM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>constant C </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lab</parametername>
</parameternamelist>
<parameterdescription>
<para>labels </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a0fa33e9e6df8481e1b00d568e907bd44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CMultiClassSVM::~CMultiClassSVM</definition>
        <argsstring>()</argsstring>
        <name>~CMultiClassSVM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a33dc12458e3dada6a16275c692dc1fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool shogun::CMultiClassSVM::create_multiclass_svm</definition>
        <argsstring>(int32_t num_classes)</argsstring>
        <name>create_multiclass_svm</name>
        <param>
          <type>int32_t</type>
          <declname>num_classes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create multiclass SVM</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_classes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of classes in SVM </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if creation was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a77b2855e7b7b429134a58884888befa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool shogun::CMultiClassSVM::set_svm</definition>
        <argsstring>(int32_t num, CSVM *svm)</argsstring>
        <name>set_svm</name>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classshogun_1_1CSVM" kindref="compound">CSVM</ref> *</type>
          <declname>svm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set SVM</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>svm</parametername>
</parameternamelist>
<parameterdescription>
<para>SVM to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if setting was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1aaf41d29a7cfce8571ebd94a8d231984a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshogun_1_1CSVM" kindref="compound">CSVM</ref> *</type>
        <definition>CSVM* shogun::CMultiClassSVM::get_svm</definition>
        <argsstring>(int32_t num)</argsstring>
        <name>get_svm</name>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get SVM</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>which SVM to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SVM at number num </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="71" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1ad9ec81290c88f67645dc47d4e7a9b30e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t shogun::CMultiClassSVM::get_num_svms</definition>
        <argsstring>()</argsstring>
        <name>get_num_svms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get number of SVMs</para><para><simplesect kind="return"><para>number of SVMs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="83" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a4985d83458c8cc4e745fb070c2ced9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CMultiClassSVM::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplementedby refid="classshogun_1_1CLaRank_1af3afedda65ff7be64cd6d132ee15ee60">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cleanup SVM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a079fd56e82890c78bcd620c5ed5fe602" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CLabels *</type>
        <definition>virtual CLabels* shogun::CMultiClassSVM::classify</definition>
        <argsstring>()</argsstring>
        <name>classify</name>
        <reimplements refid="classshogun_1_1CKernelMachine_1a38ead2ce9c9b727eb20a463c42c9ce53">classify</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify all examples</para><para><simplesect kind="return"><para>resulting labels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1acc0b1b93eba5946d4047369aecfe9881" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CMultiClassSVM::classify_example</definition>
        <argsstring>(int32_t num)</argsstring>
        <name>classify_example</name>
        <reimplements refid="classshogun_1_1CKernelMachine_1ab081d4a3c5762b75e9b786b8d1025402">classify_example</reimplements>
        <reimplementedby refid="classshogun_1_1CScatterSVM_1ae9005b86365b3643a6b29289f1f6cf11">classify_example</reimplementedby>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify one example</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of example to classify </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>resulting classification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a5b3eaebb5ef5bd57e334476985205e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CLabels *</type>
        <definition>virtual CLabels* shogun::CMultiClassSVM::classify_one_vs_rest</definition>
        <argsstring>()</argsstring>
        <name>classify_one_vs_rest</name>
        <reimplementedby refid="classshogun_1_1CScatterSVM_1aebbf4134a15009c7254de12058674146">classify_one_vs_rest</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify one vs rest</para><para><simplesect kind="return"><para>resulting labels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1ac2a9de722e15b4984e9bc6e3c991c978" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CMultiClassSVM::classify_example_one_vs_rest</definition>
        <argsstring>(int32_t num)</argsstring>
        <name>classify_example_one_vs_rest</name>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify one example one vs rest</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of example of classify </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>resulting classification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a1dffd1398f0dfe0ea76f48f36fcbf826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CLabels *</type>
        <definition>CLabels* shogun::CMultiClassSVM::classify_one_vs_one</definition>
        <argsstring>()</argsstring>
        <name>classify_one_vs_one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify one vs one</para><para><simplesect kind="return"><para>resulting labels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1afbb3e6194095fc1342731faace2b1fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float64_t</type>
        <definition>float64_t shogun::CMultiClassSVM::classify_example_one_vs_one</definition>
        <argsstring>(int32_t num)</argsstring>
        <name>classify_example_one_vs_one</name>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify one example one vs one</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of example of classify </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>resulting classification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1aae1a53b37fde5117f1447b73ea1c48e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool shogun::CMultiClassSVM::load</definition>
        <argsstring>(FILE *svm_file)</argsstring>
        <name>load</name>
        <reimplements refid="classshogun_1_1CSVM_1a53bdb4afaf8f88c2e52d783b28d68703">load</reimplements>
        <param>
          <type>FILE *</type>
          <declname>svm_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load a Multiclass SVM from file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>svm_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CMultiClassSVM_1a3e6e8e7881d36abb38e4b65cb632e0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool shogun::CMultiClassSVM::save</definition>
        <argsstring>(FILE *svm_file)</argsstring>
        <name>save</name>
        <reimplements refid="classshogun_1_1CSVM_1aec8a6cbb16a1803a291f383ef8eb7c71">save</reimplements>
        <param>
          <type>FILE *</type>
          <declname>svm_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write a Multiclass SVM to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>svm_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class MultiClassSVM </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="228">
        <label>shogun::CLibSVMMultiClass</label>
        <link refid="classshogun_1_1CLibSVMMultiClass"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="229">
        <label>shogun::CMKLMultiClass</label>
        <link refid="classshogun_1_1CMKLMultiClass"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="224">
        <label>shogun::CKernelMachine</label>
        <link refid="classshogun_1_1CKernelMachine"/>
        <childnode refid="225" relation="public-inheritance">
        </childnode>
      </node>
      <node id="222">
        <label>shogun::CMultiClassSVM</label>
        <link refid="classshogun_1_1CMultiClassSVM"/>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="230">
        <label>shogun::CScatterSVM</label>
        <link refid="classshogun_1_1CScatterSVM"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="225">
        <label>shogun::CClassifier</label>
        <link refid="classshogun_1_1CClassifier"/>
      </node>
      <node id="223">
        <label>shogun::CSVM</label>
        <link refid="classshogun_1_1CSVM"/>
        <childnode refid="224" relation="public-inheritance">
        </childnode>
      </node>
      <node id="226">
        <label>shogun::CGMNPSVM</label>
        <link refid="classshogun_1_1CGMNPSVM"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="227">
        <label>shogun::CLaRank</label>
        <link refid="classshogun_1_1CLaRank"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="233">
        <label>shogun::CKernelMachine</label>
        <link refid="classshogun_1_1CKernelMachine"/>
        <childnode refid="234" relation="public-inheritance">
        </childnode>
      </node>
      <node id="231">
        <label>shogun::CMultiClassSVM</label>
        <link refid="classshogun_1_1CMultiClassSVM"/>
        <childnode refid="232" relation="public-inheritance">
        </childnode>
        <childnode refid="232" relation="usage">
          <edgelabel>m_svms</edgelabel>
        </childnode>
      </node>
      <node id="235">
        <label>shogun::CMKL</label>
        <link refid="classshogun_1_1CMKL"/>
        <childnode refid="232" relation="public-inheritance">
        </childnode>
        <childnode refid="232" relation="usage">
          <edgelabel>svm</edgelabel>
        </childnode>
      </node>
      <node id="234">
        <label>shogun::CClassifier</label>
        <link refid="classshogun_1_1CClassifier"/>
      </node>
      <node id="232">
        <label>shogun::CSVM</label>
        <link refid="classshogun_1_1CSVM"/>
        <childnode refid="233" relation="public-inheritance">
        </childnode>
        <childnode refid="235" relation="usage">
          <edgelabel>mkl</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" line="31" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/MultiClassSVM.h" bodystart="30" bodyend="149"/>
    <listofallmembers>
      <member refid="classshogun_1_1CSVM_1abbb1e87fd73520b279ed68913e7d3952" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>C1</name></member>
      <member refid="classshogun_1_1CSVM_1adc7f13258df96749be0c0af03d73b1a3" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>C2</name></member>
      <member refid="classshogun_1_1CSVM_1aede8a7c6c1c29ef037648e55f79ea582" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>callback</name></member>
      <member refid="classshogun_1_1CClassifier_1a37259b3ffbe96af1eda8dd2d9428221c" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CClassifier</name></member>
      <member refid="classshogun_1_1CKernelMachine_1af2d719c7dd34401eb1544a6124e88046" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CKernelMachine</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a079fd56e82890c78bcd620c5ed5fe602" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>classify</name></member>
      <member refid="classshogun_1_1CKernelMachine_1ad9cf8044ff5e5dadb06f74903cf248a8" prot="public" virt="virtual" ambiguityscope="shogun::CSVM::"><scope>shogun::CMultiClassSVM</scope><name>classify</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1acc0b1b93eba5946d4047369aecfe9881" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_example</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a842c2010c3c0716616facc0592e39191" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_example_helper</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1afbb3e6194095fc1342731faace2b1fc3" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_example_one_vs_one</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1ac2a9de722e15b4984e9bc6e3c991c978" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_example_one_vs_rest</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a1dffd1398f0dfe0ea76f48f36fcbf826" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_one_vs_one</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a5b3eaebb5ef5bd57e334476985205e7b" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>classify_one_vs_rest</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a4985d83458c8cc4e745fb070c2ced9d8" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>cleanup</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1aa572b39323fb484992fa1af1bd68e9d4" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CMultiClassSVM</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1aa6c95f2f5a7813d8f73cbae2b669e11f" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CMultiClassSVM</name></member>
      <member refid="classshogun_1_1CSVM_1a799f48e17928a04f8a59e8e11450d87d" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>compute_svm_dual_objective</name></member>
      <member refid="classshogun_1_1CSVM_1ac7a7ccc604d92c07745f0d20e3cd681f" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>compute_svm_primal_objective</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a33dc12458e3dada6a16275c692dc1fc5" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>create_multiclass_svm</name></member>
      <member refid="classshogun_1_1CKernelMachine_1aadb3dcfa41bcdb3cedb4bb590c421f99" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>create_new_model</name></member>
      <member refid="classshogun_1_1CSVM_1a9ed20fde9ba51b6f4a174e6bcdee9bb2" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CSVM</name></member>
      <member refid="classshogun_1_1CSVM_1ac921019d10ab940c9b9eb430cb0af50d" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>CSVM</name></member>
      <member refid="classshogun_1_1CSVM_1a79f6290f97bdc9178917f6f37f883007" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>epsilon</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a52348988d896bcda6a005c9af0424655" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_alpha</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a34137de1f460aaa60bb888bc42cd8987" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_alphas</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a21f1f26eab5e1177fbb0a5b361020ac2" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_batch_computation_enabled</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a3221b3acb94edfe8cdefa2fc659c6fc8" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_bias</name></member>
      <member refid="classshogun_1_1CKernelMachine_1af7b87d7a2438e8e74e8fb689e609c83b" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_bias_enabled</name></member>
      <member refid="classshogun_1_1CSVM_1aa925c40d161f332b21f5f6c1d5a9e30b" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_C1</name></member>
      <member refid="classshogun_1_1CSVM_1a282a427d35615fe4ce9582d3efc6b766" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_C2</name></member>
      <member refid="classshogun_1_1CClassifier_1a52d05215c6b6a252650c41a0b29d8cc5" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_classifier_type</name></member>
      <member refid="classshogun_1_1CSVM_1abf4c3abcdc8f5f5ce5dca52abc631e63" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_epsilon</name></member>
      <member refid="classshogun_1_1CKernelMachine_1aa065ba2b4863e152beb95c03aa6add24" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_kernel</name></member>
      <member refid="classshogun_1_1CClassifier_1a787dcde8fe53a734fcb77f988d821408" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_label</name></member>
      <member refid="classshogun_1_1CClassifier_1a5f1f62d263b6201e1624990deadba5a8" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_labels</name></member>
      <member refid="classshogun_1_1CKernelMachine_1acc42836c7731c0f029ebd77f045e25cf" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_linadd_enabled</name></member>
      <member refid="classshogun_1_1CSVM_1a97b1aa0697b753cc3898dbb8790bdcfc" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_linear_term</name></member>
      <member refid="classshogun_1_1CSVM_1a8dda3a8c4315f988dd1d1dd791bd8152" prot="protected" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_linear_term_array</name></member>
      <member refid="classshogun_1_1CClassifier_1a6e48967294c55850d95235d487ce2c02" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_max_train_time</name></member>
      <member refid="classshogun_1_1CSVM_1a78b2baa898294c079e52cedc5c6102a0" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>get_name</name></member>
      <member refid="classshogun_1_1CSVM_1aa7899e8953ff5bcce8918e5095430552" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_nu</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a639f528d6956936a482523bdc04eb4b5" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_num_support_vectors</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1ad9ec81290c88f67645dc47d4e7a9b30e" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_num_svms</name></member>
      <member refid="classshogun_1_1CSVM_1a1a825064f5599e4d3a78d595565c936a" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_objective</name></member>
      <member refid="classshogun_1_1CSVM_1aa9f220fc5a0f7222fe8a71316ffa0310" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_qpsize</name></member>
      <member refid="classshogun_1_1CSVM_1a727c64fadb95845ffc75f0d9d1766076" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_shrinking_enabled</name></member>
      <member refid="classshogun_1_1CClassifier_1a8a3acda6819b4a4b77b656b6b9e1817c" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_solver_type</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a340532552838d25c1a0917d59de1dbee" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_support_vector</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a50bd31e7cf0cabc0ec41896ab97292fa" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_support_vectors</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1aaf41d29a7cfce8571ebd94a8d231984a" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>get_svm</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a0915cae39b88af20c288fbc1f5979afb" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>init_kernel_optimization</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a6d47114463588d9dbd672180dc2e7357" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>kernel</name></member>
      <member refid="classshogun_1_1CClassifier_1a68f1285e63422a24319ed95910d72f73" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>labels</name></member>
      <member refid="classshogun_1_1CSVM_1a4103dd9a97319317117e84e5cb9ce473" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>linear_term</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1aae1a53b37fde5117f1447b73ea1c48e8" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>load</name></member>
      <member refid="classshogun_1_1CKernelMachine_1ac40c305fb5587c0004d5338ea6d712d2" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_alpha</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a5c8a9af0e7b79d02d0be95b3cd8e9910" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_bias</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a9209eca2e3955be1a4fdd0491689edd1" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_num_classes</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a7fa029f4b26b5bd92a70b990f76663cb" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_num_svms</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a573287700677f15e71c4d0ca6926b592" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_svms</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a7e1c9037fb66d596c5dd83c28b8dce6d" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>m_svs</name></member>
      <member refid="classshogun_1_1CClassifier_1a8524d634a67f3538b112f72d7835af46" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>max_train_time</name></member>
      <member refid="classshogun_1_1CSVM_1a94d628c09667f3b469ad4852f9e29690" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>mkl</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1aaba78143262f00e356b7e8f643124f81" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>multiclass_type</name></member>
      <member refid="classshogun_1_1CSVM_1a13b42636b6f32acb975043ad16e77b0a" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>nu</name></member>
      <member refid="classshogun_1_1CKernelMachine_1ab4fbabe44610f09e33362234eb131432" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>num_svs</name></member>
      <member refid="classshogun_1_1CSVM_1a1793d92e74d09027ce319f5e6bf55f87" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>objective</name></member>
      <member refid="classshogun_1_1CSVM_1af10c87729b08be38d1bbe7daa1502420" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>qpsize</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a3e6e8e7881d36abb38e4b65cb632e0a9" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>save</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a804a4f283e98849f4b85a6d52371a848" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_alpha</name></member>
      <member refid="classshogun_1_1CKernelMachine_1ae057fbcb6071331223f1a26de82d1f88" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_alphas</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a1bef02fca7cd9808c9c67c898109a8d2" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_batch_computation_enabled</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a5edc82a48029b91216251b354d341452" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_bias</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a95eb6221dd46fe2dc9fb42b53845df36" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_bias_enabled</name></member>
      <member refid="classshogun_1_1CSVM_1af745c6d5d45c5225c4d2a0b8743632db" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_C</name></member>
      <member refid="classshogun_1_1CSVM_1a2798c8deb9a8712d9f49666dd1fb19d6" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_callback_function</name></member>
      <member refid="classshogun_1_1CSVM_1ac882137277cca76b55c28541ddc5e542" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_defaults</name></member>
      <member refid="classshogun_1_1CSVM_1a49773823645284d75da2b22a1707b9e7" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_epsilon</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a9a26799c7d6769d6f7d052b984718c72" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_kernel</name></member>
      <member refid="classshogun_1_1CClassifier_1aa6b87d22c14fc2b6970d8bf1edbb15fb" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>set_labels</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a605209bfe9a431912fc9a718df808887" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_linadd_enabled</name></member>
      <member refid="classshogun_1_1CSVM_1a3b8ec9a1ff4992e6f9e400568aa06d09" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>set_linear_term</name></member>
      <member refid="classshogun_1_1CClassifier_1af8930a0a848388d8647c9e4604a7856d" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_max_train_time</name></member>
      <member refid="classshogun_1_1CSVM_1a80eb31d8811d31e4612a0856424db063" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_nu</name></member>
      <member refid="classshogun_1_1CSVM_1a9fedfc8004e361f44a9eef1248088c16" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_objective</name></member>
      <member refid="classshogun_1_1CSVM_1a349a01da8d94a5ce76475a205b9a0d17" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_qpsize</name></member>
      <member refid="classshogun_1_1CSVM_1a3fb0649330798f231b7e864ef3659e8f" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_shrinking_enabled</name></member>
      <member refid="classshogun_1_1CClassifier_1a4c87d6f3a2342c3053aeca82c3cf528c" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_solver_type</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a2746562f3c38954ca0a27089cfbd6eeb" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_support_vector</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a69402864eced218da049c53529138c45" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_support_vectors</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a77b2855e7b7b429134a58884888befa7" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_svm</name></member>
      <member refid="classshogun_1_1CSVM_1a197e3be46c604e75917e6f197562f3da" prot="public" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>set_tube_epsilon</name></member>
      <member refid="classshogun_1_1CClassifier_1a360902e938d7b8890084c5bc6df617be" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>solver_type</name></member>
      <member refid="classshogun_1_1CSVM_1a883d54a63cea716452a35467c90c0d97" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>svm_loaded</name></member>
      <member refid="classshogun_1_1CClassifier_1a9904cc0a8d7ec077cc1fede8d64ebb22" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>train</name></member>
      <member refid="classshogun_1_1CSVM_1aac8050c6b0d7d922330de0fa3e8c1570" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>tube_epsilon</name></member>
      <member refid="classshogun_1_1CKernelMachine_1ade160206d7ddebd3ab2f8d1f40aaa7f9" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>use_batch_computation</name></member>
      <member refid="classshogun_1_1CKernelMachine_1abf9e9cb89f609d79b36a4d1a7f6945b9" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>use_bias</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a8dde883a0c2f53867711a2408e3bef16" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>use_linadd</name></member>
      <member refid="classshogun_1_1CSVM_1a38e40e0db03787a48f54877e53f1f49b" prot="protected" virt="non-virtual"><scope>shogun::CMultiClassSVM</scope><name>use_shrinking</name></member>
      <member refid="classshogun_1_1CClassifier_1ae7d6c7d39fb314c1092163e958ef66a8" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>~CClassifier</name></member>
      <member refid="classshogun_1_1CKernelMachine_1a5d9a0f4626b37665f847cf209e94a2ed" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>~CKernelMachine</name></member>
      <member refid="classshogun_1_1CMultiClassSVM_1a0fa33e9e6df8481e1b00d568e907bd44" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>~CMultiClassSVM</name></member>
      <member refid="classshogun_1_1CSVM_1aaa7cb652cc6a927d00b696637efccd49" prot="public" virt="virtual"><scope>shogun::CMultiClassSVM</scope><name>~CSVM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
