<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="ssl_8h" kind="file">
    <compoundname>ssl.h</compoundname>
    <includes local="yes">lib/common.h</includes>
    <includes local="yes">features/DotFeatures.h</includes>
    <incdepgraph>
      <node id="181">
        <label>lib/common.h</label>
      </node>
      <node id="182">
        <label>features/DotFeatures.h</label>
      </node>
      <node id="180">
        <label>/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h</label>
        <link refid="ssl.h"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structshogun_1_1data" prot="public">shogun::data</innerclass>
    <innerclass refid="structshogun_1_1vector__double" prot="public">shogun::vector_double</innerclass>
    <innerclass refid="structshogun_1_1vector__int" prot="public">shogun::vector_int</innerclass>
    <innerclass refid="structshogun_1_1options" prot="public">shogun::options</innerclass>
    <innerclass refid="classshogun_1_1Delta" prot="public">shogun::Delta</innerclass>
    <innernamespace refid="namespaceshogun">shogun</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="ssl_8h_1af46e773a1b0c6cf34c8e66606b1edacb" prot="public" static="no">
        <name>CGITERMAX</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="26" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a674996aca8ed15029a99b557490ada1b" prot="public" static="no">
        <name>SMALL_CGITERMAX</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="27" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a002b2f4894492820fe708b1b7e7c5e70" prot="public" static="no">
        <name>EPSILON</name>
        <initializer>1e-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="28" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a763d2cd8e54a0ca42de4d8adc2da7714" prot="public" static="no">
        <name>BIG_EPSILON</name>
        <initializer>0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="29" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a3ebdd7608379066ef7fbd21f508ccdbe" prot="public" static="no">
        <name>RELATIVE_STOP_EPS</name>
        <initializer>1e-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="30" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a05526be7e22fff1c990d42565ef10a37" prot="public" static="no">
        <name>MFNITERMAX</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="31" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1ae2bcd250018523220bdc70a1e1e2fdfe" prot="public" static="no">
        <name>TSVM_ANNEALING_RATE</name>
        <initializer>1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="32" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1aef0cc522924e3076dc19116324a42006" prot="public" static="no">
        <name>TSVM_LAMBDA_SMALL</name>
        <initializer>1e-5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="33" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1acba40bf4c1a3f10e40c36ed82621f86b" prot="public" static="no">
        <name>DA_ANNEALING_RATE</name>
        <initializer>1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="34" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1a4522a777b8c9c019081adfacf095beaa" prot="public" static="no">
        <name>DA_INIT_TEMP</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="35" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1ade26c051bbbdef5e1e0546946925e6fd" prot="public" static="no">
        <name>DA_INNER_ITERMAX</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="36" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssl_8h_1ac396e56cf7d074e9757ae1cdcb1600e0" prot="public" static="no">
        <name>DA_OUTER_ITERMAX</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="37" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>2006<sp/>Vikas<sp/>Sindhwani<sp/>(vikass@cs.uchicago.edu)</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVM-lin:<sp/>Fast<sp/>SVM<sp/>Solvers<sp/>for<sp/>Supervised<sp/>and<sp/>Semi-supervised<sp/>Learning</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>SVM-lin.<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVM-lin<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVM-lin<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>along<sp/>with<sp/>SVM-lin<sp/>(see<sp/>gpl.txt);<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SSL_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SSL_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OPTIMIZATION<sp/>CONSTANTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CGITERMAX<sp/>10000<sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>number<sp/>of<sp/>CGLS<sp/>iterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMALL_CGITERMAX<sp/>10<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>heuristic<sp/>1<sp/>in<sp/>reference<sp/>[2]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPSILON<sp/><sp/><sp/>1e-6<sp/></highlight><highlight class="comment">/*<sp/>most<sp/>tolerances<sp/>are<sp/>set<sp/>to<sp/>this<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIG_EPSILON<sp/>0.01<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>heuristic<sp/>2<sp/>in<sp/>reference<sp/>[2]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RELATIVE_STOP_EPS<sp/>1e-9<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>L2-SVM-MFN<sp/>relative<sp/>stopping<sp/>criterion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MFNITERMAX<sp/>50<sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>number<sp/>of<sp/>MFN<sp/>iterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSVM_ANNEALING_RATE<sp/>1.5<sp/></highlight><highlight class="comment">/*<sp/>rate<sp/>at<sp/>which<sp/>lambda_u<sp/>is<sp/>increased<sp/>in<sp/>TSVM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSVM_LAMBDA_SMALL<sp/>1e-5<sp/></highlight><highlight class="comment">/*<sp/>lambda_u<sp/>starts<sp/>from<sp/>this<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DA_ANNEALING_RATE<sp/>1.5<sp/></highlight><highlight class="comment">/*<sp/>annealing<sp/>rate<sp/>for<sp/>DA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DA_INIT_TEMP<sp/>10<sp/></highlight><highlight class="comment">/*<sp/>initial<sp/>temperature<sp/>relative<sp/>to<sp/>lambda_u<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DA_INNER_ITERMAX<sp/>100<sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>fixed<sp/>temperature<sp/>iterations<sp/>for<sp/>DA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DA_OUTER_ITERMAX<sp/>30<sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>number<sp/>of<sp/>outer<sp/>loops<sp/>for<sp/>DA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lib/common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;features/DotFeatures.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">shogun</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45" refid="structshogun_1_1data" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshogun_1_1data" kindref="compound">data</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1data_1a0205601c5d95b76987db590f860a21af" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1data_1af24167e3a581286cfd6a5d8c16b1b59d" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1data_1aec2f589cb42a0de751ae91f8955a381c" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1data_1af1a6c8d81d5a9643a42ecd158455fff8" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1data_1a6491837e3eea8792639a6cad224f0624" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shogun::CDotFeatures*<sp/><ref refid="structshogun_1_1data_1a3c9276cf8c452af81aeb7f03c63fd114" kindref="member">features</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structshogun_1_1data_1ab7abb48f08781c080d88285ace9b1a96" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structshogun_1_1data_1aa512a22cb6543377457f38aef2e6c8eb" kindref="member">C</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structshogun_1_1vector__double" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshogun_1_1vector__double" kindref="compound">vector_double</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1vector__double_1aa1fe3e0b438265039f25264a6b6f789b" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*<ref refid="structshogun_1_1vector__double_1a70ca540b354af3b4dde969a0043ad7d1" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structshogun_1_1vector__int" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshogun_1_1vector__int" kindref="compound">vector_int</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1vector__int_1afadc5cfff99ebfa1cf4ff7d6ed7a75fb" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structshogun_1_1vector__int_1a3e1e4e64f0625f50678340331cf88e60" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>RLS,<sp/>SVM,<sp/>TSVM,<sp/>DA_SVM<sp/>};<sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>implemented<sp/>algorithms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structshogun_1_1options" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshogun_1_1options" kindref="compound">options</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>options<sp/>*/</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1options_1a7d2daf3b9c6992a20b9f2908e4d88de7" kindref="member">algo</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1a7f54ecd756671b626088483c7989330b" kindref="member">lambda</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1a8b7fa3808d4b3598f42fe659f88a36dd" kindref="member">lambda_u</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1options_1a2fca97e21232f8402c2c88e8d1ba07e3" kindref="member">S</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1abd3c89bae3ed1171581c90208cc35a50" kindref="member">R</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1aecfe38dec8e7b65ff85f507a3c0cc6be" kindref="member">Cp</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1a188b0a93caacb4b69ff3bd22c80e6d8b" kindref="member">Cn</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>internal<sp/>optimization<sp/>options<sp/>*/</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1a2603ab14260e770142e5889adc9f3a66" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1options_1a04c32b859d17a9fc415c0fa4b7d599e3" kindref="member">cgitermax</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structshogun_1_1options_1a2151118b315831b56bd10216d519ab6a" kindref="member">mfnitermax</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="structshogun_1_1options_1ae4a0a6198ea7e7843d3a43b26d3af43f" kindref="member">bias</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classshogun_1_1Delta" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshogun_1_1Delta" kindref="compound">Delta</ref><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshogun_1_1Delta_1a745d6d3f979af3a5f5a9931fde7e59c8" kindref="member">Delta</ref>()<sp/>{<sp/><ref refid="classshogun_1_1Delta_1a5c534e1711ebd221efa59e933cdc97f3" kindref="member">delta</ref>=0.0;<sp/><ref refid="classshogun_1_1Delta_1aff0b445cdf99f6699230860f680e1475" kindref="member">index</ref>=0;<ref refid="classshogun_1_1Delta_1a61026fe91875e81486524943bdad6cc5" kindref="member">s</ref>=0;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/><ref refid="classshogun_1_1Delta_1a5c534e1711ebd221efa59e933cdc97f3" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="classshogun_1_1Delta_1aff0b445cdf99f6699230860f680e1475" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="classshogun_1_1Delta_1a61026fe91875e81486524943bdad6cc5" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshogun_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>a<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshogun_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a.<ref refid="classshogun_1_1Delta_1a5c534e1711ebd221efa59e933cdc97f3" kindref="member">delta</ref><sp/>&lt;<sp/>b.<ref refid="classshogun_1_1Delta_1a5c534e1711ebd221efa59e933cdc97f3" kindref="member">delta</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*A,<sp/>int32_t<sp/>k,<sp/>float64_t<sp/>a);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initializes<sp/>a<sp/>vector_double<sp/>to<sp/>be<sp/>of<sp/>length<sp/>k,<sp/>all<sp/>elements<sp/>set<sp/>to<sp/>a<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_int<sp/>*A,<sp/>int32_t<sp/>k);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initializes<sp/>a<sp/>vector_int<sp/>to<sp/>be<sp/>of<sp/>length<sp/>k,<sp/>elements<sp/>set<sp/>to<sp/>1,2..k.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetLabeledData(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data_Labeled,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data);<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>extracts<sp/>labeled<sp/>data<sp/>from<sp/>Data<sp/>and<sp/>copies<sp/>it<sp/>into<sp/>Data_Labeled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">float64_t<sp/>norm_square(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_double<sp/>*A);<sp/></highlight><highlight class="comment">/*<sp/>returns<sp/>squared<sp/>length<sp/>of<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ssl_train:<sp/>takes<sp/>data,<sp/>options,<sp/>uninitialized<sp/>weight<sp/>and<sp/>output</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>vector_doubles,<sp/>routes<sp/>it<sp/>to<sp/>the<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>learnt<sp/>weight<sp/>vector<sp/>and<sp/>the<sp/>outputs<sp/>it<sp/>gives<sp/>on<sp/>the<sp/>data<sp/>matrix<sp/>are<sp/>saved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ssl_train(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*W,<sp/></highlight><highlight class="comment">/*<sp/>weight<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*O);<sp/></highlight><highlight class="comment">/*<sp/>output<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>svmlin<sp/>algorithms<sp/>and<sp/>their<sp/>subroutines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Conjugate<sp/>Gradient<sp/>for<sp/>Sparse<sp/>Linear<sp/>Least<sp/>Squares<sp/>Problems<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Solves:<sp/>min_w<sp/>0.5*Options-&gt;lamda*w&apos;*w<sp/>+<sp/>0.5*sum_{i<sp/>in<sp/>Subset}<sp/>Data-&gt;C[i]<sp/>(Y[i]-<sp/>w&apos;<sp/>x_i)^2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>over<sp/>a<sp/>subset<sp/>of<sp/>examples<sp/>x_i<sp/>specified<sp/>by<sp/>vector_int<sp/>Subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">int32_t<sp/>CGLS(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_int<sp/>*Subset,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Weights,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Outputs);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Linear<sp/>Modified<sp/>Finite<sp/>Newton<sp/>L2-SVM*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Solves:<sp/>min_w<sp/>0.5*Options-&gt;lamda*w&apos;*w<sp/>+<sp/>0.5*sum_i<sp/>Data-&gt;C[i]<sp/>max(0,1<sp/>-<sp/>Y[i]<sp/>w&apos;<sp/>x_i)^2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">int32_t<sp/>L2_SVM_MFN(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Weights,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Outputs,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ini);<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>ini=0<sp/>if<sp/>no<sp/>good<sp/>starting<sp/>guess<sp/>for<sp/>Weights,<sp/>else<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">float64_t<sp/>line_search(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*w,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*w_bar,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>lambda,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*o,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*o_bar,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*Y,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*C,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>d,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>l);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Transductive<sp/>L2-SVM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Solves<sp/>:<sp/>min_(w,<sp/>Y[i],i<sp/>in<sp/>UNlabeled)<sp/>0.5*Options-&gt;lamda*w&apos;*w<sp/>+<sp/>0.5*(1/Data-&gt;l)*sum_{i<sp/>in<sp/>labeled}<sp/>max(0,1<sp/>-<sp/>Y[i]<sp/>w&apos;<sp/>x_i)^2<sp/>+<sp/>0.5*(Options-&gt;lambda_u/Data-&gt;u)*sum_{i<sp/>in<sp/>UNlabeled}<sp/>max(0,1<sp/>-<sp/>Y[i]<sp/>w&apos;<sp/>x_i)^2<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>subject<sp/>to:<sp/>(1/Data-&gt;u)*sum_{i<sp/>in<sp/>UNlabeled}<sp/>max(0,Y[i])<sp/>=<sp/>Options-&gt;R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">int32_t<sp/>TSVM_MFN(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Weights,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Outputs);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">int32_t<sp/>switch_labels(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t*<sp/>Y,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t*<sp/>o,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t*<sp/>JU,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>u,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>S);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deterministic<sp/>Annealing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">int32_t<sp/>DA_S3VM(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Weights,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Outputs);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>optimize_p(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t*<sp/>g,<sp/>int32_t<sp/>u,<sp/>float64_t<sp/>T,<sp/>float64_t<sp/>r,<sp/>float64_t*p);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">int32_t<sp/>optimize_w(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>data<sp/>*Data,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>float64_t<sp/>*p,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>options<sp/>*Options,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Weights,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>vector_double<sp/>*Outputs,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ini);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">float64_t<sp/>transductive_cost(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>normWeights,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*Y,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*Outputs,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>m,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>lambda,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>lambda_u);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">float64_t<sp/>entropy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>float64_t<sp/>*p,<sp/>int32_t<sp/>u);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>KL-divergence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">float64_t<sp/>KL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>float64_t<sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>float64_t<sp/>*q,<sp/>int32_t<sp/>u);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_SSL_H</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight></codeline>
    </programlisting>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h"/>
  </compounddef>
</doxygen>
