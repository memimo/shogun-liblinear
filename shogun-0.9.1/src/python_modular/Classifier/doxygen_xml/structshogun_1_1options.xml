<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="structshogun_1_1options" kind="struct" prot="public">
    <compoundname>shogun::options</compoundname>
    <includes local="no">ssl.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structshogun_1_1options_1a7d2daf3b9c6992a20b9f2908e4d88de7" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::options::algo</definition>
        <argsstring></argsstring>
        <name>algo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>regularization parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="91" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a7f54ecd756671b626088483c7989330b" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>regularization parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="93" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a8b7fa3808d4b3598f42fe659f88a36dd" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::lambda_u</definition>
        <argsstring></argsstring>
        <name>lambda_u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>regularization parameter over unlabeled examples </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="95" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a2fca97e21232f8402c2c88e8d1ba07e3" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::options::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>maximum number of TSVM switches per fixed-weight label optimization </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="97" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1abd3c89bae3ed1171581c90208cc35a50" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>expected fraction of unlabeled examples in positive class </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="99" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1aecfe38dec8e7b65ff85f507a3c0cc6be" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::Cp</definition>
        <argsstring></argsstring>
        <name>Cp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cost for positive examples </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="101" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a188b0a93caacb4b69ff3bd22c80e6d8b" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::Cn</definition>
        <argsstring></argsstring>
        <name>Cn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cost for negative examples </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="103" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a2603ab14260e770142e5889adc9f3a66" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>all tolerances </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="107" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a04c32b859d17a9fc415c0fa4b7d599e3" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::options::cgitermax</definition>
        <argsstring></argsstring>
        <name>cgitermax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max iterations for CGLS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="109" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1a2151118b315831b56bd10216d519ab6a" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::options::mfnitermax</definition>
        <argsstring></argsstring>
        <name>mfnitermax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max iterations for L2_SVM_MFN </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="111" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshogun_1_1options_1ae4a0a6198ea7e7843d3a43b26d3af43f" prot="public" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::options::bias</definition>
        <argsstring></argsstring>
        <name>bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1.0 if bias is to be used, 0.0 otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="114" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>various <ref refid="structshogun_1_1options" kindref="compound">options</ref> user + internal optimisation </para>    </detaileddescription>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" line="88" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/svm/ssl.h" bodystart="87" bodyend="115"/>
    <listofallmembers>
      <member refid="structshogun_1_1options_1a7d2daf3b9c6992a20b9f2908e4d88de7" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>algo</name></member>
      <member refid="structshogun_1_1options_1ae4a0a6198ea7e7843d3a43b26d3af43f" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>bias</name></member>
      <member refid="structshogun_1_1options_1a04c32b859d17a9fc415c0fa4b7d599e3" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>cgitermax</name></member>
      <member refid="structshogun_1_1options_1a188b0a93caacb4b69ff3bd22c80e6d8b" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>Cn</name></member>
      <member refid="structshogun_1_1options_1aecfe38dec8e7b65ff85f507a3c0cc6be" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>Cp</name></member>
      <member refid="structshogun_1_1options_1a2603ab14260e770142e5889adc9f3a66" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>epsilon</name></member>
      <member refid="structshogun_1_1options_1a7f54ecd756671b626088483c7989330b" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>lambda</name></member>
      <member refid="structshogun_1_1options_1a8b7fa3808d4b3598f42fe659f88a36dd" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>lambda_u</name></member>
      <member refid="structshogun_1_1options_1a2151118b315831b56bd10216d519ab6a" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>mfnitermax</name></member>
      <member refid="structshogun_1_1options_1abd3c89bae3ed1171581c90208cc35a50" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>R</name></member>
      <member refid="structshogun_1_1options_1a2fca97e21232f8402c2c88e8d1ba07e3" prot="public" virt="non-virtual"><scope>shogun::options</scope><name>S</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
