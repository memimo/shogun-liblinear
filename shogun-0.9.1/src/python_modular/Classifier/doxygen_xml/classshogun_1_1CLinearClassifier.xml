<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="classshogun_1_1CLinearClassifier" kind="class" prot="public">
    <compoundname>shogun::CLinearClassifier</compoundname>
    <basecompoundref refid="classshogun_1_1CClassifier" prot="public" virt="non-virtual">shogun::CClassifier</basecompoundref>
    <derivedcompoundref refid="classshogun_1_1CPerceptron" prot="public" virt="non-virtual">shogun::CPerceptron</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CSubGradientSVM" prot="public" virt="non-virtual">shogun::CSubGradientSVM</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CSVMLin" prot="public" virt="non-virtual">shogun::CSVMLin</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CSVMOcas" prot="public" virt="non-virtual">shogun::CSVMOcas</derivedcompoundref>
    <derivedcompoundref refid="classshogun_1_1CSVMSGD" prot="public" virt="non-virtual">shogun::CSVMSGD</derivedcompoundref>
    <includes local="no">LinearClassifier.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshogun_1_1CLinearClassifier_1ad0ca6a36ee07ca0beba61def547f6564" prot="protected" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t shogun::CLinearClassifier::w_dim</definition>
        <argsstring></argsstring>
        <name>w_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dimension of w </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="175" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CLinearClassifier_1a3f02f85d6c001c1fcfb4f67fbddaffe8" prot="protected" static="no" mutable="no">
        <type>float64_t *</type>
        <definition>float64_t* shogun::CLinearClassifier::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>w </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="177" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CLinearClassifier_1a8f920d6d3dce0a27cbb8b36aed8a6220" prot="protected" static="no" mutable="no">
        <type>float64_t</type>
        <definition>float64_t shogun::CLinearClassifier::bias</definition>
        <argsstring></argsstring>
        <name>bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bias </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="179" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshogun_1_1CLinearClassifier_1abd48587ed93efcbb8b1ea3c40c229b1e" prot="protected" static="no" mutable="no">
        <type>CDotFeatures *</type>
        <definition>CDotFeatures* shogun::CLinearClassifier::features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>features </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="181" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a1e353d4462e0c790543683a7cd35261c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shogun::CLinearClassifier::CLinearClassifier</definition>
        <argsstring>()</argsstring>
        <name>CLinearClassifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a9c6ccea8f5bf3a0e055aec1b4ef9fdf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual shogun::CLinearClassifier::~CLinearClassifier</definition>
        <argsstring>()</argsstring>
        <name>~CLinearClassifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a3d2b2e860b03a856019e5eafb41a03e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float64_t</type>
        <definition>virtual float64_t shogun::CLinearClassifier::classify_example</definition>
        <argsstring>(int32_t vec_idx)</argsstring>
        <name>classify_example</name>
        <reimplements refid="classshogun_1_1CClassifier_1a57f85b028e040e0c79dd09903b118bdd">classify_example</reimplements>
        <param>
          <type>int32_t</type>
          <declname>vec_idx</declname>
        </param>
        <briefdescription>
<para>get output for example &quot;vec_idx&quot; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="69" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a847be7aabc3656ae0263e75b7e7933c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CLinearClassifier::get_w</definition>
        <argsstring>(float64_t *&amp;dst_w, int32_t &amp;dst_dims)</argsstring>
        <name>get_w</name>
        <param>
          <type>float64_t *&amp;</type>
          <declname>dst_w</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>dst_dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get w</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_w</parametername>
</parameternamelist>
<parameterdescription>
<para>store w in this argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_dims</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of w </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="79" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1aae7a04f5eeb75662a3740afa3662dd83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CLinearClassifier::get_w</definition>
        <argsstring>(float64_t **dst_w, int32_t *dst_dims)</argsstring>
        <name>get_w</name>
        <param>
          <type>float64_t **</type>
          <declname>dst_w</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>dst_dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get w (swig compatible)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_w</parametername>
</parameternamelist>
<parameterdescription>
<para>store w in this argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_dims</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of w </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="91" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a6e5d80ca592587317e5c8842d92c60f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CLinearClassifier::set_w</definition>
        <argsstring>(float64_t *src_w, int32_t src_w_dim)</argsstring>
        <name>set_w</name>
        <param>
          <type>float64_t *</type>
          <declname>src_w</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>src_w_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set w</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_w</parametername>
</parameternamelist>
<parameterdescription>
<para>new w </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_w_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of new w </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="106" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1af150779eb78b46fe736d56b06f76113d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shogun::CLinearClassifier::set_bias</definition>
        <argsstring>(float64_t b)</argsstring>
        <name>set_bias</name>
        <param>
          <type>float64_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set bias</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>new bias </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="116" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a6966226c35c31bf278b6b038159786fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float64_t</type>
        <definition>float64_t shogun::CLinearClassifier::get_bias</definition>
        <argsstring>()</argsstring>
        <name>get_bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get bias</para><para><simplesect kind="return"><para>bias </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="125" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a78010edf322d0188013cadfd891c1f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CLinearClassifier::load</definition>
        <argsstring>(FILE *srcfile)</argsstring>
        <name>load</name>
        <reimplements refid="classshogun_1_1CClassifier_1a956f6d34ff60d2d775eed5cbef17e8f3">load</reimplements>
        <param>
          <type>FILE *</type>
          <declname>srcfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load from file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcfile</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if loading was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1ad6012c92f6dd565478a43da7e3c779ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool shogun::CLinearClassifier::save</definition>
        <argsstring>(FILE *dstfile)</argsstring>
        <name>save</name>
        <reimplements refid="classshogun_1_1CClassifier_1a3df725f5632f1c052028899d8bbe28f6">save</reimplements>
        <param>
          <type>FILE *</type>
          <declname>dstfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>save to file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dstfile</parametername>
</parameternamelist>
<parameterdescription>
<para>file to save to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if saving was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1ac2ecfddeb611425961499b644a86acaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void shogun::CLinearClassifier::set_features</definition>
        <argsstring>(CDotFeatures *feat)</argsstring>
        <name>set_features</name>
        <param>
          <type>CDotFeatures *</type>
          <declname>feat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set features</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feat</parametername>
</parameternamelist>
<parameterdescription>
<para>features to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="148" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1ac1f1aac929b7958f5a7d48d9ea40f2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CLabels *</type>
        <definition>virtual CLabels* shogun::CLinearClassifier::classify</definition>
        <argsstring>()</argsstring>
        <name>classify</name>
        <reimplements refid="classshogun_1_1CClassifier_1a3944cff6766ecc2b913a08f04918f129">classify</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify all examples</para><para><simplesect kind="return"><para>resulting labels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="158"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a15ae96a018644322d1c7848a44b1afce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CLabels *</type>
        <definition>virtual CLabels* shogun::CLinearClassifier::classify</definition>
        <argsstring>(CFeatures *data)</argsstring>
        <name>classify</name>
        <reimplements refid="classshogun_1_1CClassifier_1a66b1e113e7b30bd88b0e238c6ccc3bd4">classify</reimplements>
        <param>
          <type>CFeatures *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>classify objects</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structshogun_1_1data" kindref="compound">data</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>(test)<ref refid="structshogun_1_1data" kindref="compound">data</ref> to be classified </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>classified labels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="classshogun_1_1CLinearClassifier_1a8ee7a0fc2702e98784765eb8ecc5d8db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>CDotFeatures *</type>
        <definition>virtual CDotFeatures* shogun::CLinearClassifier::get_features</definition>
        <argsstring>()</argsstring>
        <name>get_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get features</para><para><simplesect kind="return"><para>features </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="171" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class LinearClassifier is a generic interface for all kinds of linear classifiers. </para>    </briefdescription>
    <detaileddescription>
<para>A linear classifier computes</para><para><formula id="5">\[ f({\bf x})= {\bf w} \cdot {\bf x} + b \]</formula></para><para>where <formula id="6">${\bf w}$</formula> are the weights assigned to each feature in training and <formula id="4">$b$</formula> the bias.</para><para>To implement a linear classifier all that is required is to define the <ref refid="classshogun_1_1CClassifier_1a9904cc0a8d7ec077cc1fede8d64ebb22" kindref="member">train()</ref> function that delivers <formula id="6">${\bf w}$</formula> above.</para><para>Note that this framework works with linear classifiers of arbitraty feature type, e.g. dense and sparse and even string based features. This is implemented by using CDotFeatures that may provide a mapping function <formula id="7">$\Phi({\bf x})\mapsto {\cal R^D}$</formula> encapsulating all the required operations (like the dot product). The decision function is thus</para><para><formula id="8">\[ f({\bf x})= {\bf w} \cdot \Phi({\bf x}) + b. \]</formula></para><para>The following linear classifiers are implemented <itemizedlist>
<listitem><para>Linear Descriminant Analysis (CLDA) </para></listitem>
<listitem><para>Linear Programming Machines (CLPM, CLPBoost) </para></listitem>
<listitem><para>Perceptron (<ref refid="classshogun_1_1CPerceptron" kindref="compound">CPerceptron</ref>) </para></listitem>
<listitem><para>Linear SVMs (<ref refid="classshogun_1_1CSVMSGD" kindref="compound">CSVMSGD</ref>, CLibLinear, <ref refid="classshogun_1_1CSVMOcas" kindref="compound">CSVMOcas</ref>, <ref refid="classshogun_1_1CSVMLin" kindref="compound">CSVMLin</ref>, CSubgradientSVM)</para></listitem>
</itemizedlist>
<simplesect kind="see"><para>CDotFeatures </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="164">
        <label>shogun::CSubGradientSVM</label>
        <link refid="classshogun_1_1CSubGradientSVM"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="161">
        <label>shogun::CLinearClassifier</label>
        <link refid="classshogun_1_1CLinearClassifier"/>
        <childnode refid="162" relation="public-inheritance">
        </childnode>
      </node>
      <node id="163">
        <label>shogun::CPerceptron</label>
        <link refid="classshogun_1_1CPerceptron"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="167">
        <label>shogun::CSVMSGD</label>
        <link refid="classshogun_1_1CSVMSGD"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="165">
        <label>shogun::CSVMLin</label>
        <link refid="classshogun_1_1CSVMLin"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="162">
        <label>shogun::CClassifier</label>
        <link refid="classshogun_1_1CClassifier"/>
      </node>
      <node id="166">
        <label>shogun::CSVMOcas</label>
        <link refid="classshogun_1_1CSVMOcas"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="168">
        <label>shogun::CLinearClassifier</label>
        <link refid="classshogun_1_1CLinearClassifier"/>
        <childnode refid="169" relation="public-inheritance">
        </childnode>
      </node>
      <node id="169">
        <label>shogun::CClassifier</label>
        <link refid="classshogun_1_1CClassifier"/>
      </node>
    </collaborationgraph>
    <location file="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" line="61" bodyfile="/home/thor/Projects/shogun-liblinear/shogun-0.9.1/src/shogun/classifier/LinearClassifier.h" bodystart="60" bodyend="182"/>
    <listofallmembers>
      <member refid="classshogun_1_1CLinearClassifier_1a8f920d6d3dce0a27cbb8b36aed8a6220" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>bias</name></member>
      <member refid="classshogun_1_1CClassifier_1a37259b3ffbe96af1eda8dd2d9428221c" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>CClassifier</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1ac1f1aac929b7958f5a7d48d9ea40f2f2" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>classify</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a15ae96a018644322d1c7848a44b1afce" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>classify</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a3d2b2e860b03a856019e5eafb41a03e4" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>classify_example</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a1e353d4462e0c790543683a7cd35261c" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>CLinearClassifier</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1abd48587ed93efcbb8b1ea3c40c229b1e" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>features</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a6966226c35c31bf278b6b038159786fe" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>get_bias</name></member>
      <member refid="classshogun_1_1CClassifier_1a52d05215c6b6a252650c41a0b29d8cc5" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>get_classifier_type</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a8ee7a0fc2702e98784765eb8ecc5d8db" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>get_features</name></member>
      <member refid="classshogun_1_1CClassifier_1a787dcde8fe53a734fcb77f988d821408" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>get_label</name></member>
      <member refid="classshogun_1_1CClassifier_1a5f1f62d263b6201e1624990deadba5a8" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>get_labels</name></member>
      <member refid="classshogun_1_1CClassifier_1a6e48967294c55850d95235d487ce2c02" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>get_max_train_time</name></member>
      <member refid="classshogun_1_1CClassifier_1a8a3acda6819b4a4b77b656b6b9e1817c" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>get_solver_type</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a847be7aabc3656ae0263e75b7e7933c6" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>get_w</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1aae7a04f5eeb75662a3740afa3662dd83" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>get_w</name></member>
      <member refid="classshogun_1_1CClassifier_1a68f1285e63422a24319ed95910d72f73" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>labels</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a78010edf322d0188013cadfd891c1f61" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>load</name></member>
      <member refid="classshogun_1_1CClassifier_1a8524d634a67f3538b112f72d7835af46" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>max_train_time</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1ad6012c92f6dd565478a43da7e3c779ab" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>save</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1af150779eb78b46fe736d56b06f76113d" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>set_bias</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1ac2ecfddeb611425961499b644a86acaf" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>set_features</name></member>
      <member refid="classshogun_1_1CClassifier_1aa6b87d22c14fc2b6970d8bf1edbb15fb" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>set_labels</name></member>
      <member refid="classshogun_1_1CClassifier_1af8930a0a848388d8647c9e4604a7856d" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>set_max_train_time</name></member>
      <member refid="classshogun_1_1CClassifier_1a4c87d6f3a2342c3053aeca82c3cf528c" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>set_solver_type</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a6e5d80ca592587317e5c8842d92c60f7" prot="public" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>set_w</name></member>
      <member refid="classshogun_1_1CClassifier_1a360902e938d7b8890084c5bc6df617be" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>solver_type</name></member>
      <member refid="classshogun_1_1CClassifier_1a9904cc0a8d7ec077cc1fede8d64ebb22" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>train</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a3f02f85d6c001c1fcfb4f67fbddaffe8" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>w</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1ad0ca6a36ee07ca0beba61def547f6564" prot="protected" virt="non-virtual"><scope>shogun::CLinearClassifier</scope><name>w_dim</name></member>
      <member refid="classshogun_1_1CClassifier_1ae7d6c7d39fb314c1092163e958ef66a8" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>~CClassifier</name></member>
      <member refid="classshogun_1_1CLinearClassifier_1a9c6ccea8f5bf3a0e055aec1b4ef9fdf2" prot="public" virt="virtual"><scope>shogun::CLinearClassifier</scope><name>~CLinearClassifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
